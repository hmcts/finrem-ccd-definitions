{
  "stats": {
    "suites": 0,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-20T10:34:19.971Z",
    "end": "2023-07-20T10:34:19.971Z",
    "duration": 0,
    "testsRegistered": 21,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 21,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "4e42894a-c76c-45a5-a859-d5eb4e74170d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "79cf1494-10cc-49fd-98f1-79e3c0ef1834",
          "title": "create Contested case ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_test.js",
          "file": "/test/functional/contested_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "create Contested case  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "561787c5-8252-4928-a7fe-9408a58aa218",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "create Contested case  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "920665b6-baa4-4101-8239-a9c21390592c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "create Contested case  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "4b392760-4c61-4380-863e-a75b6786d1e9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "create Contested case  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "9d29b096-802f-43e8-9734-c7856a4b8cd4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Contested Case Creation For Caseworker @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Caseworker @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.hwfPaymentAcceptedEvent, verifyTabText.historyTab.hwfPaymentAcceptedEndState);\n  }\n}",
              "err": {},
              "uuid": "b1a42d20-c468-4254-b418-8c53cdfa581b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Creation For Judge @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.assignToJudgeEvent, verifyTabText.historyTab.assignToJudgeEndState);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  }\n}",
              "err": {},
              "uuid": "6df340dd-962a-47eb-883c-533109edb0ec",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Creation For Ready For Hearing @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Ready For Hearing @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\nconst allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\nconst listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\nconst submitUploadCaseFiles = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_submitUploadedCaseFiles', './test/data/ccd-contested-list-for-hearing.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.submitUploadCaseFilesEvent, verifyTabText.historyTab.submitUploadCaseFilesEndState);\n  I.schedulingAndListingTab(verifyTabText.caseType, verifyTabText.schedulingAndListingTab.tabName);\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n}",
              "err": {},
              "uuid": "bf59099e-ea85-4aea-bb2c-8852db26da58",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Approved and Send Order  @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Approved and Send Order  @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\nconst allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\nconst listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\nconst submitUploadCaseFiles = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_submitUploadedCaseFiles', './test/data/ccd-contested-list-for-hearing.json');\nconst solicitorDraftDirectionOrder = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_solicitorDraftDirectionOrder', './test/data/ccd-contested-solicitor-draft-direction-order.json');\nconst draftOrderApproved = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_draftOrderApproved', './test/data/ccd-contested-judge-approved.json');\nconst uploadOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_directionOrder', './test/data/ccd-contested-caseworker-upload-order.json');\nconst sendOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_sendOrder', './test/data/ccd-caseworker-send-order.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.sendOrderEvent, verifyTabText.historyTab.sendOrderState);\n  I.wait(2);\n  I.click({css: '.mat-tab-header-pagination-after'});\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  I.contestedOrderTab(verifyTabText.caseType, verifyTabText.OrdersTab.tabName);\n}",
              "err": {},
              "uuid": "7c77bf5c-9ed5-4b67-8049-841b4efbb82e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consented case in Contested @nightly @pipeline",
              "fullTitle": "create Contested case : Consented case in Contested @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-demo-contested-to-consented.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-contested-to-consented.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.consentOrderEvent, verifyTabText.historyTab.consentOrderEndState);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n    I.consentOrderProcessTab(verifyTabText.caseType, verifyTabText.consentOrderProcessTab.tabName);\n  }\n}",
              "err": {},
              "uuid": "908e88a3-9f41-4f3b-913e-e22e4658bfda",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consented case in Contested Assigned to Judge @nightly @pipeline",
              "fullTitle": "create Contested case : Consented case in Contested Assigned to Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-contested-to-consented.json');\nconst contestAssignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_assignToJudgeConsent', './test/data/ccd-contested-to-consented.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.assignToJudgeConsentEvent, verifyTabText.historyTab.assignToJudgeConsentEndState);\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  I.consentOrderProcessTab(verifyTabText.caseType, verifyTabText.consentOrderProcessTab.tabName);\n}",
              "err": {},
              "uuid": "dc818a94-a36f-418b-a99a-f6332113f6ec",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Paper Case Creation @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Paper Case Creation @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(caseWorkerUserName, caseWorkerPassword, './test/data/ccd-demo-contested-paper-case-basic-data.json', 'FinancialRemedyContested', 'FR_newPaperCase');\n  /* eslint-disable */\n  const manualPayment = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_manualPayment', './test/data/ccd-demo-contested-paper-case-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(caseWorkerUserName, caseWorkerPassword, './test/data/ccd-contested-paper-case-basic-data.json', 'FinancialRemedyContested', 'FR_newPaperCase');\n  const manualPayment = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_manualPayment', './test/data/ccd-contested-paper-case-basic-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedPaperTabData(verifyContestedPaperTabText.caseType, verifyContestedPaperTabText.historyTab.manualPaymentEvent, verifyContestedPaperTabText.historyTab.manualPaymentEndState);\n  }\n}",
              "err": {},
              "uuid": "fba83827-ea5a-446f-8bb4-5b46a9508589",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested share case @nightly @pipeline",
              "fullTitle": "create Contested case : Contested share case @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  /* eslint-disable */\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json',solRef);\n/* eslint-enable */\n  I.signInIdam(solicitorUserName, solicitorPassword);\n  I.assignContestedShareCase(caseId, solRef);\n}",
              "err": {},
              "uuid": "1dc3bcfc-abc6-43e3-a7be-ab74d0e2b9fa",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Matrimonial Case Creation by Solicitor @nightly",
              "fullTitle": "create Contested case : Contested Matrimonial Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(solicitorUserName, solicitorPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedSolicitorCreate(solRef, 'Matrimonial');\nawait I.contestedDivorceDetails();\nawait I.contestedApplicantDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplication();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Matrimonial');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "b78326ae-56c9-4ce8-a7c7-56ccd3cc9493",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Schedule 1 Case Creation by Solicitor @nightly",
              "fullTitle": "create Contested case : Contested Schedule 1 Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(solicitorUserName, solicitorPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedSolicitorCreate(solRef, 'Schedule1');\nawait I.contestedApplicantDetails();\nawait I.childrenDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplicationForSchedule1();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Schedule1');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "50657e9b-baa8-4ca2-a835-b624c0367757",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Schedule 1 Case Creation by caseworker @nightly",
              "fullTitle": "create Contested case : Contested Schedule 1 Case Creation by caseworker @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedCaseworkerCreate(caRef, 'Schedule1', true);\nawait I.contestedApplicantDetails();\nawait I.childrenDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplicationForSchedule1();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Schedule1');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "57781512-030c-40cd-ac45-55850ece4245",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Matrimonial Case Creation by Caseworker @nightly",
              "fullTitle": "create Contested case : Contested Matrimonial Case Creation by Caseworker @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedCaseworkerCreate(caRef, 'Matrimonial', true);\nawait I.contestedDivorceDetails();\nawait I.contestedApplicantDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplication();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Matrimonial');\nI.waitForText('Form A Application', '60');\nawait I.manualPayment();\nawait I.issueApplication();",
              "err": {},
              "uuid": "c579a2a9-8cc8-472c-ad00-0d5ba3a3c769",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Manage Confidential Documents",
              "fullTitle": "create Contested case : Manage Confidential Documents",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//login as a caseworker, create contested case\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedCaseworkerCreate(caRef, 'Matrimonial', true);\nawait I.contestedDivorceDetails();\nawait I.contestedApplicantDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplication();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Matrimonial');\nI.waitForText('Form A Application', '60');\nawait I.manualPayment();\nawait I.issueApplication();\n//TODO - update test Manage Confidential Documents",
              "err": {},
              "uuid": "fe6f1bb0-e9b7-4e24-94bf-6d9df153b3c7",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Manage Confidential Documents @nightly",
              "fullTitle": "create Contested case : Manage Confidential Documents @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    await I.manageConfidentialDocuments();\n    logger.info('Manage confidential documents event completed');\n    await I.verifyContestedConfidentialTabData(verifyTabText.historyTab.manageConfidentialDocuments, verifyTabText.confidentialDocumentsTab);\n    logger.info('Confidential documents verified on Confidential documents tab');",
              "err": {},
              "uuid": "5f0edc21-63da-49ec-9ae2-d43680dbd61c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "progress to listing for contested case @nightly",
              "fullTitle": "create Contested case : progress to listing for contested case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    logger.info('---------------------case number------------------------', caseId);\n    logger.info('--------------case worker created case ' +caseId+ ' successfully-----------------');\n    await I.allocateJudge();\n    await I.see('Allocate to Judge');\n    await I.signOut();\n    await I.signInIdam(judgeUserName, judgePassword);\n    await I.waitForText('Judicial Case Manager');\n    await I.enterCaseReference(caseId);\n    await I.see('Gate Keeping And Allocation');\n    await I.giveAllocationDirection();\n    await I.signOut();\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.waitForText('Manage Cases');\n    await I.enterCaseReference(caseId);\n    await I.listForHearing();\n     I.waitForText('List for Hearing');",
              "err": {},
              "uuid": "baf63844-0814-434b-8b16-0b12679c9463",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Update Contact Details for contested Case @nightly ",
              "fullTitle": "create Contested case : Update Contact Details for contested Case @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//caseworker, type-matrimonial\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  await I.updateContactDetails();",
              "err": {},
              "uuid": "5f0bb87d-c30b-479d-b3ba-67319b130fa7",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Add Note   @nightly ",
              "fullTitle": "create Contested case : Contested Add Note   @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Matrimonial\n const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n   I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n   I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n   await I.addNote();",
              "err": {},
              "uuid": "265ce003-0e7d-45fd-928e-058c1bf7f4ce",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b1a42d20-c468-4254-b418-8c53cdfa581b",
            "6df340dd-962a-47eb-883c-533109edb0ec",
            "bf59099e-ea85-4aea-bb2c-8852db26da58",
            "7c77bf5c-9ed5-4b67-8049-841b4efbb82e",
            "908e88a3-9f41-4f3b-913e-e22e4658bfda",
            "dc818a94-a36f-418b-a99a-f6332113f6ec",
            "fba83827-ea5a-446f-8bb4-5b46a9508589",
            "1dc3bcfc-abc6-43e3-a7be-ab74d0e2b9fa",
            "b78326ae-56c9-4ce8-a7c7-56ccd3cc9493",
            "50657e9b-baa8-4ca2-a835-b624c0367757",
            "57781512-030c-40cd-ac45-55850ece4245",
            "c579a2a9-8cc8-472c-ad00-0d5ba3a3c769",
            "fe6f1bb0-e9b7-4e24-94bf-6d9df153b3c7",
            "5f0edc21-63da-49ec-9ae2-d43680dbd61c",
            "baf63844-0814-434b-8b16-0b12679c9463",
            "5f0bb87d-c30b-479d-b3ba-67319b130fa7",
            "265ce003-0e7d-45fd-928e-058c1bf7f4ce"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "ac723b5d-2668-4037-a7d4-a4227fe535ba",
          "title": "Create Cases for Respondent Journey ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested-respondent_test.js",
          "file": "/test/functional/contested-respondent_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Create Cases for Respondent Journey  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "282392e6-30e9-4c5d-b21d-b33d3eae36d4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Create Cases for Respondent Journey  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "e52d2b3d-a7cf-450b-853f-72aeb1b528e9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Create Cases for Respondent Journey  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "e639c028-8d23-4b77-b7d4-3e41af84972c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Create Cases for Respondent Journey  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "5ccfa354-8f00-4c20-8797-c14fbb70d7d5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create and assign Contested Case To Respondent @pipeline @nightly",
              "fullTitle": "Create Cases for Respondent Journey : Create and assign Contested Case To Respondent @pipeline @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  I.signInXuiOrg(caaUsername, caaPassword);\n  I.assignContestedCase(caseId, respondentEmail);\n} else {\n  if (nightlyTest === 'true') {\n    const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    I.signInXuiOrg(caaUsername, caaPassword);\n    I.assignContestedCase(caseId, respondentEmail);\n  }\n}",
              "err": {},
              "uuid": "124bcb86-e8e3-4fb3-9a87-4ced4427242b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "124bcb86-e8e3-4fb3-9a87-4ced4427242b"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "090f7556-f2ee-43d4-8f39-0e94849f93d4",
          "title": "General Application",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/general_application_test.js",
          "file": "/test/functional/general_application_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "General Application \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "2c2e3bf3-cd30-4c33-a9c7-e064836afacd",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "General Application \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "7dc5975c-9a83-4266-80fe-0b82a974992d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "General Application \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "59dbbce1-b35a-41e7-b145-f8f1e03af9d4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "General Application \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "54dfcb43-96cc-47fe-9f93-6965a4330def",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "General Application e2e Test",
              "fullTitle": "General Application: General Application e2e Test",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logger.info(\"General application test starting\");\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nI.signInIdam(solicitorUserName, solicitorPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.solicitorCreateGeneralApplication();\nawait I.verifyGeneralApplicationTab(\"Created\");\nI.signOut();\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.caseWorkerReferGeneralApplication();\nawait I.verifyGeneralApplicationTab(\"Referred To Judge\");\nI.signOut();\nI.signInIdam(judgeUserName, judgePassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.judgeGeneralApplicationOutcome();\nawait I.verifyGeneralApplicationTab(\"Approved\");\nI.signOut();\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.generalApplicationDirections();\nawait I.verifyGeneralApplicationTab(\"Approved, Completed\");",
              "err": {},
              "uuid": "ad6ab743-1270-4fd6-a5a1-4fe1d6b7fcdc",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "ad6ab743-1270-4fd6-a5a1-4fe1d6b7fcdc"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "53d92d8c-42bc-4b8f-a6d4-e7cd112705a3",
          "title": "Manage Interveners",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/interveners_test.js",
          "file": "/test/functional/interveners_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Manage Interveners \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "03bdff61-9514-4075-a1b8-3954008b891c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Manage Interveners \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "14e6d28e-82ac-4add-b046-663c6e860f86",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Manage Interveners \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "a7885fb8-962a-48d3-aa75-dcd3f66ccd7b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Manage Interveners \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "45af76e4-bf4e-4915-8cae-92edcfe13de9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Add Interveners @nightly",
              "fullTitle": "Manage Interveners: Add Interveners @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nI.wait('5');\nawait I.manageInterveners();\nlogger.info('Manage Interveners event completed');\nawait I.contestedIntervenersTab(verifyTabText.historyTab.manageIntervenersEvent, verifyTabText.IntervenersTab);\nlogger.info('Interveners tab verified');",
              "err": {},
              "uuid": "6f4242d4-c9e8-451e-a32b-572ef84d66fe",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "6f4242d4-c9e8-451e-a32b-572ef84d66fe"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "e733973f-f18b-4785-8485-da0dc945b1b7",
          "title": "Smoke Test",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/smoke_test.js",
          "file": "/test/functional/smoke_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Smoke Test \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "55616f8d-4452-43da-853f-17f756f5089b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Smoke Test \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "b928bab0-e4fe-43c0-bbbb-7bcaa2bb1581",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Smoke Test \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "f519e132-2b59-4282-a0ea-8802ef7746be",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Smoke Test \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "25688cbc-9f77-47ab-a3a5-348b2ae17791",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check env running @smoke",
              "fullTitle": "Smoke Test: Check env running @smoke",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await I.amOnPage(`${process.env.CCD_WEB_URL}`);\nawait I.wait('5');\nawait I.waitForText('Sign in',60);\nawait I.see(\"Log in with your eJudiciary account\");",
              "err": {},
              "uuid": "3041660f-822c-4f5a-93a9-733305166705",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "3041660f-822c-4f5a-93a9-733305166705"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "functional-output/xui/parallel_chunk2_4697d80bdefdef94aaba8756c0032a6f_2",
        "reportName": "FinRemTests",
        "inlineAssets": true
      },
      "version": "5.1.0"
    }
  }
}