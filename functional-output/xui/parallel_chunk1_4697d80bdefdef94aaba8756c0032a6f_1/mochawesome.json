{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-20T10:34:19.971Z",
    "end": "2023-07-20T10:35:02.048Z",
    "duration": 42077,
    "testsRegistered": 27,
    "passPercent": 3.7037037037037033,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 26,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "f953b195-f48b-4374-84e1-dadf01e187f1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ac3c8a10-0fa5-45b6-9228-8a245dbc7926",
          "title": "Admin Web",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/admin_test.js",
          "file": "/test/functional/admin_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Admin Web \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "8c974f4f-d998-429b-995d-59cc7e085831",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Admin Web \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "ef8c7036-414d-4c09-a743-b1efbc7fce7a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Admin Web \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "160b16a0-f02a-4165-808e-2b4b82827527",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Admin Web \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "4df3ea57-34e5-449c-a4ed-c0a358b4f0b9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "add all the roles @pipeline",
              "fullTitle": "Admin Web: add all the roles @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.loginToAdminConsole();\nI.createRole('citizen');\nI.createRole('caseworker');\nI.createRole('caseworker-divorce-financialremedy-courtadmin');\nI.createRole('caseworker-divorce-financialremedy-solicitor');\nI.createRole('caseworker-divorce-financialremedy-judiciary');\nI.createRole('caseworker-divorce-systemupdate');\nI.createRole('caseworker-divorce-bulkscan');\nI.createRole('caseworker-divorce-financialremedy');\nI.createRole('caseworker-caa');\nI.createRole('caseworker-divorce-financialremedy-superuser');\nI.createRole('caseworker-approver');\nI.click('Manage User Roles');\nI.see('citizen');\nI.see('caseworker');\nI.see('caseworker-divorce-financialremedy-courtadmin');\nI.see('caseworker-divorce-financialremedy-solicitor');\nI.see('caseworker-divorce-financialremedy-judiciary');\nI.see('caseworker-divorce-systemupdate');\nI.see('caseworker-divorce-bulkscan');\nI.see('caseworker-divorce-financialremedy');\nI.see('caseworker-caa');\nI.see('caseworker-divorce-financialremedy-superuser')\nI.see('caseworker-approver');",
              "err": {},
              "uuid": "57a95283-1e92-45eb-8788-640e856cff4f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "57a95283-1e92-45eb-8788-640e856cff4f"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "9403fe49-6621-4262-a82b-c3d461e214e7",
          "title": "Consented case flag",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/consented_caseflag_test.js",
          "file": "/test/functional/consented_caseflag_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Consented case flag \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "8a1a3fb2-54f6-47e8-94dd-7099c8410669",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Consented case flag \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "a2e0b61c-f75b-4f52-a4ac-569e3a81c8ca",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Consented case flag \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "0e8ae494-6bed-4645-a5df-3f79cde35624",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Consented case flag \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "12aac63a-5fc1-4fb1-8cd3-e1767d5b196e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Caseworker creates case flag  @nightly",
              "fullTitle": "Consented case flag: Caseworker creates case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.applicationDraftedEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');",
              "err": {},
              "uuid": "b731bae6-0246-4cc6-86cf-9dffe1908358",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker manage case flag  @nightly",
              "fullTitle": "Consented case flag: Caseworker manage case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nconst caseFlag = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'createFlags', './test/data/ccd-consented-case-flag-data.json');\n\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nconst flagStatus = await I.manageFlags();\nawait I.clickTab('Case Flags');\nawait I.validateCaseFlagTab(flagStatus);\nlogger.info('manage case event completed and verified');",
              "err": {},
              "uuid": "f5c472be-704f-415d-b23c-f8c9ece567a7",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Judge creates case flag  @nightly",
              "fullTitle": "Consented case flag: Judge creates case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nI.signInIdam(judgeUserName, judgePassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.issueApplicationEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');\nlogger.info('manage case event completed and verified');",
              "err": {},
              "uuid": "6837c284-0d2d-48dd-9ee3-9ce47ad9676a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Judge manage case flag  @nightly",
              "fullTitle": "Consented case flag: Judge manage case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nconst caseFlag = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'createFlags', './test/data/ccd-consented-case-flag-data.json');\nI.signInIdam(judgeUserName, judgePassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nconst flagStatus = await I.manageFlags();\nawait I.clickTab('Case Flags');\nawait I.validateCaseFlagTab(flagStatus);\nlogger.info('manage case event completed and verified');",
              "err": {},
              "uuid": "8b6661ef-b8a9-4213-9392-ace25fbddc4b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b731bae6-0246-4cc6-86cf-9dffe1908358",
            "f5c472be-704f-415d-b23c-f8c9ece567a7",
            "6837c284-0d2d-48dd-9ee3-9ce47ad9676a",
            "8b6661ef-b8a9-4213-9392-ace25fbddc4b"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "2428cfd4-167e-4862-b7e4-3e015439f4f9",
          "title": "create Consented case ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/consented_test.js",
          "file": "/test/functional/consented_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "create Consented case  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "acf79508-83e2-4de0-be76-334033be028d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "create Consented case  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "2749a223-db15-4c95-81b9-8ee8426179a4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "create Consented case  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "2e16ac75-fd47-46e3-a3f6-da89978ac441",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "create Consented case  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "0c306b2c-c98f-424e-9a03-1e1819b1542f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Consent Case Creation For Caseworker @nightly @pipeline",
              "fullTitle": "create Consented case : Consent Case Creation For Caseworker @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-demo-consented-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\n  /* eslint-disable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.hwfPaymentAcceptedEvent, verifyTabText.historyTab.hwfPaymentAcceptedEndState);\n    I.paymentDetailsTab(verifyTabText.caseType, verifyTabText.paymentDetailsTab.tabName);\n    I.judgeDetailsTab(verifyTabText.caseType, verifyTabText.judgeDetailsTab.tabName, verifyTabText.historyTab.hwfPaymentAcceptedEvent);\n  }\n}",
              "err": {},
              "uuid": "f34d7422-ed20-423a-b59f-19dbff1d4e64",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case Creation For Judge @nightly @pipeline",
              "fullTitle": "create Consented case : Consent Case Creation For Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-demo-consented-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.issueApplicationEvent, verifyTabText.historyTab.issueApplicationEndState);\n    I.paymentDetailsTab(verifyTabText.caseType, verifyTabText.paymentDetailsTab.tabName);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  }\n}",
              "err": {},
              "uuid": "e04a7fce-9889-4468-8f1a-e5f530f6777b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case approve and send order  @nightly @pipeline ",
              "fullTitle": "create Consented case : Consent Case approve and send order  @nightly @pipeline ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nconst approveOrder = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyMVP2', 'FR_approveApplication', './test/data/ccd-consented-judge-approve-data.json');\nconst sendOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_sendOrderForApproved', './test/data/ccd-caseworker-send-order.json');\n\n  /* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.sendOrderEvent, verifyTabText.historyTab.approveSendOrderEndState);\n  I.approvedOrderTab(verifyTabText.caseType, verifyTabText.approvedOrderTab.tabName);\n  }",
              "err": {},
              "uuid": "d5ee63f4-2d0a-4a9d-930b-5124760edfcd",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case Creation by Solicitor @nightly",
              "fullTitle": "create Consented case : Consent Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  I.signInIdam(solicitorUserName, solicitorPassword);\n  I.wait('2');\n  await I.createCase('Financial Remedy Consented', 'Consent Order Application');\n  await I.solicitorCreate(solRef);\n  await I.divorceDetails();\n  await I.applicantDetails();\n  await I.consentedRespondentDetails();\n  await I.natureOfApplication();\n  await I.consentOrder();\n  await I.d81Question();\n  await I.optionalDocuments();\n  await I.consentedOtherDocuments();\n  await I.savingApplicationInformation('consented');\n  await I.checkYourAnswers();\n  // amend event\n  I.amendApplicationDetails();\n  // hwf payment submission\n  await I.caseSubmitAuthorisation('consented');\n  await I.paymentPage(false);\n  await I.hwfPaymentDetails();\n  await I.paymentSubmission();\n  await I.savingApplicationInformation('consented');\n  await I.finalPaymentSubmissionPage();\n  await I.finalInformationPage();\n  I.waitForText('History', '30');\n}",
              "err": {},
              "uuid": "01ed8bf5-9b5d-4df9-82ef-62587b1b8e2b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "f34d7422-ed20-423a-b59f-19dbff1d4e64",
            "e04a7fce-9889-4468-8f1a-e5f530f6777b",
            "d5ee63f4-2d0a-4a9d-930b-5124760edfcd",
            "01ed8bf5-9b5d-4df9-82ef-62587b1b8e2b"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "577991a8-172d-4e20-96cb-42885c27a78e",
          "title": "Contested Case flag",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_caseflag_test.js",
          "file": "/test/functional/contested_caseflag_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Contested Case flag \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "f2da771e-1052-42e8-8153-530d8442e13c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Contested Case flag \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "1f292272-ca8e-4de6-8db3-f6707afe62da",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Contested Case flag \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "2669cfb2-a250-4f3f-bb07-d862c850a0c9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Contested Case flag \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "17a4a61b-5df5-4f76-bf9d-c312a36353c3",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Caseworker creates case flag  @nightly",
              "fullTitle": "Contested Case flag: Caseworker creates case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.applicationDraftedEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');\nlogger.info('case flag created and verified');",
              "err": {},
              "uuid": "fd5edf1c-4d11-45ae-ba50-7a021e7c601f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker manage case flag  @nightly",
              "fullTitle": "Contested Case flag: Caseworker manage case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst caseFlag = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'createFlags', './test/data/ccd-consented-case-flag-data.json');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nconst flagStatus = await I.manageFlags();\nawait I.clickTab('Case Flags');\nawait I.validateCaseFlagTab(flagStatus);\nlogger.info('manage case event completed and verified');",
              "err": {},
              "uuid": "715afa9c-f2c6-4d51-b484-2a5197a8c2c7",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Judge creates case flag  @nightly",
              "fullTitle": "Contested Case flag: Judge creates case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nI.signInIdam(judgeUserName, judgePassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.applicationDraftedEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');\nlogger.info('case flag created and verified');",
              "err": {},
              "uuid": "4f796571-b203-4b5c-8553-8b2c6293b4db",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker creates case flag for schedule 1 case @nightly",
              "fullTitle": "Contested Case flag: Caseworker creates case flag for schedule 1 case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-schedule1-solicitor-create-case.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.applicationDraftedEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');\nlogger.info('case flag created and verified for schedule 1 case');",
              "err": {},
              "uuid": "9dda800e-a86a-4ca8-96da-1c308b96bcd7",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Create case flag with General Application @nightly",
              "fullTitle": "Contested Case flag: Create case flag with General Application @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    const createGeneralApplication = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'createGeneralApplication', './test/data/ccd-contested-general-application-data.json');\n    const referToJudgeApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_generalApplicationReferToJudge', './test/data/ccd-contested-general-application-refer-to-judge-data.json');\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    await I.createCaseFlag();\n    await I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.awaitingJudiciaryResponseEndState);\n    await I.validateCaseFlagAlertMessage();\n    await I.validateCaseFlagTab('Active');\n    logger.info('case flag created and verified for schedule 1 case');",
              "err": {},
              "uuid": "d1fe7e2d-6870-4185-92cb-be5805b81705",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Case flag for Paper Case @nightly",
              "fullTitle": "Contested Case flag: Case flag for Paper Case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(caseWorkerUserName, caseWorkerPassword, './test/data/ccd-contested-paper-case-basic-data.json', 'FinancialRemedyContested', 'FR_newPaperCase');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.applicationDraftedEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');\nlogger.info('case flag created and verified');",
              "err": {},
              "uuid": "36ff4e3d-c531-4329-85a6-096b5458898f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "fd5edf1c-4d11-45ae-ba50-7a021e7c601f",
            "715afa9c-f2c6-4d51-b484-2a5197a8c2c7",
            "4f796571-b203-4b5c-8553-8b2c6293b4db",
            "9dda800e-a86a-4ca8-96da-1c308b96bcd7",
            "d1fe7e2d-6870-4185-92cb-be5805b81705",
            "36ff4e3d-c531-4329-85a6-096b5458898f"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "b4afa620-562b-488e-ba05-af38e114b252",
          "title": "Contested Events",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_events_test.js",
          "file": "/test/functional/contested_events_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Contested Events \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "5403c1be-5fc6-458f-ac17-aab4574ddddb",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Contested Events \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 1315,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "056c1255-3c86-47ea-aafc-f4e6ac803fe0",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Contested Events \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "76904fd0-56f2-4333-93e5-b1d7c6f97c0d",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Contested Events \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 159,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "e8139379-acf7-4222-a922-5258e7467839",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Manage Confidential Documents @nightly",
              "fullTitle": "Contested Events: Manage Confidential Documents @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    await I.manageConfidentialDocuments();\n    logger.info('Manage confidential documents event completed');\n    await I.verifyContestedConfidentialTabData(verifyTabText.historyTab.manageConfidentialDocuments, verifyTabText.confidentialDocumentsTab);\n    logger.info('Confidential documents verified on Confidential documents tab');",
              "err": {},
              "uuid": "33e23b52-2f75-4e7b-a6d2-276a74b4d1e6",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Update Contact Details for contested Case @nightly ",
              "fullTitle": "Contested Events: Update Contact Details for contested Case @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//caseworker, type-matrimonial\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.updateContactDetails();",
              "err": {},
              "uuid": "38506c66-5ba6-4a74-bce1-ffa9e669da70",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Add Note  @nightly ",
              "fullTitle": "Contested Events: Contested Add Note  @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Matrimonial\n   const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n   const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n   const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n   const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n   I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n   I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n   await I.addNote();",
              "err": {},
              "uuid": "f9ba24e1-27fb-4b4f-ab8d-65d052f4111c",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker refunds an issued case @nightly",
              "fullTitle": "Contested Events: Caseworker refunds an issued case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logger.info(\"Refund test starting\");\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.refundCase();\nlogger.info(\"Refund test completed\");",
              "err": {},
              "uuid": "c08f1c54-145b-420e-ada9-5a70b03ef51a",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Add Note @nightly ",
              "fullTitle": "Contested Events: Contested Add Note @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Matrimonial\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.addNote();",
              "err": {},
              "uuid": "a5f175a0-0414-4c74-b0f1-f2e57725eaff",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Manage Barrister @nightly",
              "fullTitle": "Contested Events: Contested Manage Barrister @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Matrimonial\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.manageBarristerApplicant();\nawait I.manageBarristerRespondent();\nawait I.verifyManageBarristerEvent(verifyTabText.caseType, verifyTabText.historyTab.manageBarristerEvent, verifyTabText.historyTab.issueApplicationEndState);\nawait I.clickTab('Change of representatives');\nawait I.waitForText('FinRem-1-Org', 30);\nawait I.changeOfRepresentativesTab(verifyTabText.historyTab.manageBarristerEvent);\nlogger.info(\"manage barrister tab verified...\");",
              "err": {},
              "uuid": "955e9991-4d3f-4f67-b666-0ba11f9a66f0",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "List for hearing contested case @nightly",
              "fullTitle": "Contested Events: List for hearing contested case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    logger.info('---------------------case number------------------------', caseId);\n    logger.info('--------------case worker created case ' +caseId+ ' successfully-----------------');\n    await I.allocateJudge();\n    await I.see('Allocate to Judge');\n    await I.signOut();\n    await I.signInIdam(judgeUserName, judgePassword);\n    await I.waitForText('Judicial Case Manager');\n    await I.enterCaseReference(caseId);\n    await I.see('Gate Keeping And Allocation');\n    await I.giveAllocationDirection();\n    await I.signOut();\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.waitForText('Manage Cases');\n    await I.enterCaseReference(caseId);\n    await I.listForHearing();\n    I.waitForText('List for Hearing');",
              "err": {},
              "uuid": "b5b77df2-146b-456a-ac1f-e72adf85958e",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested E2E @nightly @debug",
              "fullTitle": "Contested Events: Contested E2E @nightly @debug",
              "timedOut": false,
              "duration": 40597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n// const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n// const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n// const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n// const assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\n// const allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\n// const listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\n// await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n// await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n// await I.uploadDraftOrder();\n// await I.signOut();\n// await I.signInIdam(judgeUserName, judgePassword);\n// await I.waitForText('Judicial Case Manager');\n// await I.enterCaseReference(caseId);\n// await I.waitForText('Upload Draft Order');\n// await I.draftOrderApprove();\n// await I.signOut();\nconst caseId = \"1689844745220225\";\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.waitForText('Manage Cases');\nawait I.enterCaseReference(caseId);\nawait I.uploadOrder();\nawait I.sendOrder();\nlogger.info('-----------completed E2E contested test for -------------', caseId);",
              "err": {},
              "uuid": "c1afbab0-c61a-4523-857d-9e9fd02b985c",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caseworker runs List for Interim Hearing @nightly",
              "fullTitle": "Contested Events: Caseworker runs List for Interim Hearing @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logger.info(\"List for Interim Hearing test starting\");\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.listForInterimHearing();\nawait I.verifyListForInterimHearing();\nlogger.info(\"List Of Interim Hearing Completed\");",
              "err": {},
              "uuid": "45dedb87-84e2-4378-a5ad-c9e2ead77105",
              "parentUUID": "b4afa620-562b-488e-ba05-af38e114b252",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [
            "c1afbab0-c61a-4523-857d-9e9fd02b985c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [
            "33e23b52-2f75-4e7b-a6d2-276a74b4d1e6",
            "38506c66-5ba6-4a74-bce1-ffa9e669da70",
            "f9ba24e1-27fb-4b4f-ab8d-65d052f4111c",
            "c08f1c54-145b-420e-ada9-5a70b03ef51a",
            "a5f175a0-0414-4c74-b0f1-f2e57725eaff",
            "955e9991-4d3f-4f67-b666-0ba11f9a66f0",
            "b5b77df2-146b-456a-ac1f-e72adf85958e",
            "45dedb87-84e2-4378-a5ad-c9e2ead77105"
          ],
          "duration": 40597,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "ca770792-df95-4038-b6e5-6b387f1c126c",
          "title": "Contested Schedule 1",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_schedule1_test.js",
          "file": "/test/functional/contested_schedule1_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Contested Schedule 1 \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "6fd5ead1-53d5-43c4-8a95-680869db8fe9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Contested Schedule 1 \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "a47d6bd6-851b-4301-be07-fc518230a05a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Contested Schedule 1 \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "a202b4c3-aa0f-4a86-ac87-478f877b1094",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Contested Schedule 1 \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "89e12e82-29a4-43ea-a442-2070d3f9c34d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Contested Schedule 1 Case Creation by Solicitor @nightly",
              "fullTitle": "Contested Schedule 1: Contested Schedule 1 Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(solicitorUserName, solicitorPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedSolicitorCreate(solRef, 'Schedule1');\nawait I.contestedApplicantDetails();\nawait I.childrenDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplicationForSchedule1();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Schedule1');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "42e930f3-e2ca-48e0-8640-b0edd88e51a6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Schedule 1 Case Creation by caseworker @nightly",
              "fullTitle": "Contested Schedule 1: Contested Schedule 1 Case Creation by caseworker @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedCaseworkerCreate(caRef, 'Schedule1', true);\nawait I.contestedApplicantDetails();\nawait I.childrenDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplicationForSchedule1();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Schedule1');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "69e9aa83-1fc6-4472-8462-34e08c519cba",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Schedule 1 Case Creation by Solicitor using API call @nightly",
              "fullTitle": "Contested Schedule 1: Contested Schedule 1 Case Creation by Solicitor using API call @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//The json file used to create case is new case data - this can be used to create a case via solicitor, case type schedule 1.\n   const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-schedule1-solicitor-create-case.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nawait I.signInIdam(solicitorUserName, solicitorPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.schedule1Tab(verifyTabText.Schedule1Tab.tabName);\nlogger.info('Schedule 1 tab verified...')",
              "err": {},
              "uuid": "f3b69586-5a1b-4c01-b846-6656a926dde6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "42e930f3-e2ca-48e0-8640-b0edd88e51a6",
            "69e9aa83-1fc6-4472-8462-34e08c519cba",
            "f3b69586-5a1b-4c01-b846-6656a926dde6"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "functional-output/xui/parallel_chunk1_4697d80bdefdef94aaba8756c0032a6f_1",
        "reportName": "FinRemTests",
        "inlineAssets": true
      },
      "version": "5.1.0"
    }
  }
}