{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-07-17T15:48:30.620Z",
    "end": "2023-07-17T15:50:28.182Z",
    "duration": 117562,
    "testsRegistered": 24,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 23,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "3cdcc97a-a781-40d0-b2bf-4e8404c3a98b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad5e74fb-e8a3-40b9-a406-16724529997f",
          "title": "Admin Web",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/admin_test.js",
          "file": "/test/functional/admin_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Admin Web \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "849dd703-a789-470c-9007-21e730fb4926",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Admin Web \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "f863a81e-0097-456f-824f-9067ea47c047",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Admin Web \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "eda1e7b9-4dc1-42dd-affe-459dfeaf1d6a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Admin Web \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "aa21fea9-f89c-42d4-a815-8f7f4d4974ee",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "add all the roles @preview",
              "fullTitle": "Admin Web: add all the roles @preview",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.loginToAdminConsole();\nI.createRole('citizen');\nI.createRole('caseworker');\nI.createRole('caseworker-divorce-financialremedy-courtadmin');\nI.createRole('caseworker-divorce-financialremedy-solicitor');\nI.createRole('caseworker-divorce-financialremedy-judiciary');\nI.createRole('caseworker-divorce-systemupdate');\nI.createRole('caseworker-divorce-bulkscan');\nI.createRole('caseworker-divorce-financialremedy');\nI.createRole('caseworker-caa');\nI.createRole('caseworker-divorce-financialremedy-superuser');\nI.createRole('caseworker-approver');\nI.click('Manage User Roles');\nI.see('citizen');\nI.see('caseworker');\nI.see('caseworker-divorce-financialremedy-courtadmin');\nI.see('caseworker-divorce-financialremedy-solicitor');\nI.see('caseworker-divorce-financialremedy-judiciary');\nI.see('caseworker-divorce-systemupdate');\nI.see('caseworker-divorce-bulkscan');\nI.see('caseworker-divorce-financialremedy');\nI.see('caseworker-caa');\nI.see('caseworker-divorce-financialremedy-superuser')\nI.see('caseworker-approver');",
              "err": {},
              "uuid": "f8548f34-0382-4cee-a813-c41485f437a3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "f8548f34-0382-4cee-a813-c41485f437a3"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "b8cdea27-2a49-4f0c-8775-1793b737ab51",
          "title": "Consented case flag",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/consented_caseflag_test.js",
          "file": "/test/functional/consented_caseflag_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Consented case flag \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "5deeca30-2f5f-4a97-8b11-648537c690f8",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Consented case flag \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "3bdaa6b0-5843-41de-8d51-1d0d6e986b32",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Consented case flag \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "cb8bae94-4539-432d-8f58-a8a934d7652a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Consented case flag \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "9c2ce67b-a47d-4c05-84fe-4a1e86887f03",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Caseworker creates case flag  @nightly",
              "fullTitle": "Consented case flag: Caseworker creates case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.applicationDraftedEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');",
              "err": {},
              "uuid": "04f7ccdc-2813-4256-8413-896a1b65cbe5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker manage case flag  @nightly",
              "fullTitle": "Consented case flag: Caseworker manage case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nconst caseFlag = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'createFlags', './test/data/ccd-consented-case-flag-data.json');\n\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nconst flagStatus = await I.manageFlags();\nawait I.clickTab('Case Flags');\nawait I.validateCaseFlagTab(flagStatus);\nlogger.info('manage case event completed and verified');",
              "err": {},
              "uuid": "5a1fa58f-e7d0-4219-aecf-b9e2f6c2a0f8",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Judge creates case flag  @nightly",
              "fullTitle": "Consented case flag: Judge creates case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nI.signInIdam(judgeUserName, judgePassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.issueApplicationEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');\nlogger.info('manage case event completed and verified');",
              "err": {},
              "uuid": "d6e2a198-2b23-435d-ad3c-88fbea6e57dd",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Judge manage case flag  @nightly",
              "fullTitle": "Consented case flag: Judge manage case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nconst caseFlag = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'createFlags', './test/data/ccd-consented-case-flag-data.json');\nI.signInIdam(judgeUserName, judgePassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nconst flagStatus = await I.manageFlags();\nawait I.clickTab('Case Flags');\nawait I.validateCaseFlagTab(flagStatus);\nlogger.info('manage case event completed and verified');",
              "err": {},
              "uuid": "7dfb7523-5501-41ef-a7d2-684eb41f1dce",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "04f7ccdc-2813-4256-8413-896a1b65cbe5",
            "5a1fa58f-e7d0-4219-aecf-b9e2f6c2a0f8",
            "d6e2a198-2b23-435d-ad3c-88fbea6e57dd",
            "7dfb7523-5501-41ef-a7d2-684eb41f1dce"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "e18b27c4-62ef-4d24-ab31-deb5372030d5",
          "title": "create Consented case ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/consented_test.js",
          "file": "/test/functional/consented_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "create Consented case  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "ae596520-30d4-45d8-89e6-252a00d426e9",
              "parentUUID": "e18b27c4-62ef-4d24-ab31-deb5372030d5",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "create Consented case  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 895,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "eb17f33d-6851-4050-8a2b-d87fa562074e",
              "parentUUID": "e18b27c4-62ef-4d24-ab31-deb5372030d5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "create Consented case  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "eca37c70-5138-4db9-8889-c33747699530",
              "parentUUID": "e18b27c4-62ef-4d24-ab31-deb5372030d5",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "create Consented case  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 115,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "ff23c4f3-209c-4bc4-bf36-c4bd7dd7a921",
              "parentUUID": "e18b27c4-62ef-4d24-ab31-deb5372030d5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Consent Case Creation For Caseworker @nightly @preview @debug",
              "fullTitle": "create Consented case : Consent Case Creation For Caseworker @nightly @preview @debug",
              "timedOut": false,
              "duration": 116549,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-demo-consented-basic-data.json');\n} else {\n  // const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  // const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  // const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\n  /* eslint-disable */\n  const caseId = \"1689604970702507\";\n  await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  //pause();\n  await I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.hwfPaymentAcceptedEvent, verifyTabText.historyTab.hwfPaymentAcceptedEndState);\n  await I.paymentDetailsTab(verifyTabText.caseType, verifyTabText.paymentDetailsTab.tabName);\n  //await I.judgeDetailsTab(verifyTabText.caseType, verifyTabText.judgeDetailsTab.tabName, verifyTabText.historyTab.hwfPaymentAcceptedEvent);\n}",
              "err": {
                "message": "Error: Text \"APPLICANT DETAILS\" was not found on page after 90 sec\nwaiting for function failed: timeout 90000ms exceeded",
                "estack": "Text \"APPLICANT DETAILS\" was not found on page after 90 sec\nwaiting for function failed: timeout 90000ms exceeded\n\nScenario Steps:\n\n- I.waitForText(\"APPLICANT DETAILS\") at Object.applicantTab (test/functional/pages/tab-data-verification/tab-data-verification.js:20:7)\n- I.clickTab(\"Payment details\") at Object.paymentDetailsTab (test/functional/pages/tab-data-verification/tab-data-verification.js:222:13)\n- I.waitForText(\"Payment details\", \"90\") at Object.paymentDetailsTab (test/functional/pages/tab-data-verification/tab-data-verification.js:217:14)\n- I.clickTab(\"Case Documents\") at Object.caseDocumentsTab (test/functional/pages/tab-data-verification/tab-data-verification.js:177:13)\n- I.waitForText(\"Case Documents\", \"90\") at Object.caseDocumentsTab (test/functional/pages/tab-data-verification/tab-data-verification.js:173:14)\n- I.waitForText(\"History\", 30) at Object.caseDocumentsTab (test/functional/pages/tab-data-verification/tab-data-verification.js:169:14)\n- I.clickTab(\"Authorisation\") at Object.authorisationTab (test/functional/pages/tab-data-verification/tab-data-verification.js:147:13)\n- I.waitForText(\"Authorisation\", \"5\") at Object.authorisationTab (test/functional/pages/tab-data-verification/tab-data-verification.js:143:5)\n- I.clickTab(\"Nature of Application\") at Object.natureOfApplicationTab (test/functional/pages/tab-data-verification/tab-data-verification.js:114:13)\n- I.waitForText(\"Nature of Application\", \"5\") at Object.natureOfApplicationTab (test/functional/pages/tab-data-verification/tab-data-verification.js:110:5)\n- I.clickTab(\"Divorce Dissolution details\") at Object.divorceTab (test/functional/pages/tab-data-verification/tab-data-verification.js:87:13)\n- I.waitForText(\"Divorce\", \"5\") at Object.divorceTab (test/functional/pages/tab-data-verification/tab-data-verification.js:83:5)\n- I.clickTab(\"Respondent\") at Object.respondentTab (test/functional/pages/tab-data-verification/tab-data-verification.js:54:13)\n- I.waitForText(\"Respondent\", \"90\") at Object.respondentTab (test/functional/pages/tab-data-verification/tab-data-verification.js:50:14)\n- I.clickTab(\"Applicant\") at Object.applicantTab (test/functional/pages/tab-data-verification/tab-data-verification.js:19:13)\n- I.waitForText(\"Applicant\", \"90\") at Object.applicantTab (test/functional/pages/tab-data-verification/tab-data-verification.js:15:14)\n- I.see(\"Application Submitted\") at Object.historyTab (test/functional/pages/tab-data-verification/tab-data-verification.js:10:5)\n- I.see(\"HWF Application Accepted\") at Object.historyTab (test/functional/pages/tab-data-verification/tab-data-verification.js:9:5)\n- I.waitForText(\"History\", \"30\") at Object.historyTab (test/functional/pages/tab-data-verification/tab-data-verification.js:8:5)\n- I.amOnPage(\"https://manage-case.aat.platform.hmcts.net/v2/case/1689604970702507\") at Test.<anonymous> (test/functional/consented_test.js:31:13)\n- I.wait(\"15\") at Object.signInIdam (test/functional/steps_file.js:94:12)\n- I.click(\"Sign in\") at Object.signInIdam (test/functional/steps_file.js:93:12)\n- I.fillField(\"password\", \"Nagoya0102\") at Object.signInIdam (test/functional/steps_file.js:92:12)\n- I.fillField(\"username\", \"claire_fr_mumford@yahoo.com\") at Object.signInIdam (test/functional/steps_file.js:91:12)\n- I.waitForText(\"Sign in\", 60) at Object.signInIdam (test/functional/steps_file.js:90:12)\n- I.wait(\"5\") at Object.signInIdam (test/functional/steps_file.js:86:12)\n- I.amOnPage(\"https://manage-case.aat.platform.hmcts.net\") at Object.signInIdam (test/functional/steps_file.js:85:12)\n\n",
                "diff": null
              },
              "uuid": "ceac6a8a-e9a7-4527-bb29-50340573d8d2",
              "parentUUID": "e18b27c4-62ef-4d24-ab31-deb5372030d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consent Case Creation For Judge @nightly",
              "fullTitle": "create Consented case : Consent Case Creation For Judge @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-demo-consented-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\n  /* eslint-enable */\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.issueApplicationEvent, verifyTabText.historyTab.issueApplicationEndState);\n  I.paymentDetailsTab(verifyTabText.caseType, verifyTabText.paymentDetailsTab.tabName);\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n}",
              "err": {},
              "uuid": "21f00b7e-5d8f-4ce1-981e-45d199add566",
              "parentUUID": "e18b27c4-62ef-4d24-ab31-deb5372030d5",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case approve and send order  @nightly",
              "fullTitle": "create Consented case : Consent Case approve and send order  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nconst approveOrder = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyMVP2', 'FR_approveApplication', './test/data/ccd-consented-judge-approve-data.json');\nconst sendOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_sendOrderForApproved', './test/data/ccd-caseworker-send-order.json');\n\n  /* eslint-enable */\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n// eslint-disable-next-line max-len\nI.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.sendOrderEvent, verifyTabText.historyTab.approveSendOrderEndState);\nI.approvedOrderTab(verifyTabText.caseType, verifyTabText.approvedOrderTab.tabName);",
              "err": {},
              "uuid": "63e090a4-f1d9-4212-8111-f491bcf5ede2",
              "parentUUID": "e18b27c4-62ef-4d24-ab31-deb5372030d5",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case Creation by Solicitor @nightly",
              "fullTitle": "create Consented case : Consent Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(solicitorUserName, solicitorPassword);\nI.wait('2');\nawait I.createCase('Financial Remedy Consented', 'Consent Order Application');\nawait I.solicitorCreate(solRef);\nawait I.divorceDetails();\nawait I.applicantDetails();\nawait I.consentedRespondentDetails();\nawait I.natureOfApplication();\nawait I.consentOrder();\nawait I.d81Question();\nawait I.optionalDocuments();\nawait I.consentedOtherDocuments();\nawait I.savingApplicationInformation('consented');\nawait I.checkYourAnswers();\n// amend event\nI.amendApplicationDetails();\n// hwf payment submission\nawait I.caseSubmitAuthorisation('consented');\nawait I.paymentPage(false);\nawait I.hwfPaymentDetails();\nawait I.paymentSubmission();\nawait I.savingApplicationInformation('consented');\nawait I.finalPaymentSubmissionPage();\nawait I.finalInformationPage();\nI.waitForText('History', '30');",
              "err": {},
              "uuid": "78a5c5c3-9189-4236-98f2-b858bf8e20a0",
              "parentUUID": "e18b27c4-62ef-4d24-ab31-deb5372030d5",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ceac6a8a-e9a7-4527-bb29-50340573d8d2"
          ],
          "pending": [],
          "skipped": [
            "21f00b7e-5d8f-4ce1-981e-45d199add566",
            "63e090a4-f1d9-4212-8111-f491bcf5ede2",
            "78a5c5c3-9189-4236-98f2-b858bf8e20a0"
          ],
          "duration": 116549,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "8c555175-f59b-4cb5-bc17-42fe51616c6d",
          "title": "Contested Case flag",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_caseflag_test.js",
          "file": "/test/functional/contested_caseflag_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Contested Case flag \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "f5df78fb-dcf0-444c-b874-302786c5a717",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Contested Case flag \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "d3704ad0-2a1b-4e96-a9a5-0cef792768ec",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Contested Case flag \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "294f6672-de85-4131-9432-bad4d763e20d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Contested Case flag \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "b9313c03-d243-42a4-b510-c19a764c4860",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Caseworker creates case flag  @nightly",
              "fullTitle": "Contested Case flag: Caseworker creates case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.applicationDraftedEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');\nlogger.info('case flag created and verified');",
              "err": {},
              "uuid": "8c309d7f-ce52-4e77-a6d4-efd90a144349",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker manage case flag  @nightly",
              "fullTitle": "Contested Case flag: Caseworker manage case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst caseFlag = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'createFlags', './test/data/ccd-consented-case-flag-data.json');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nconst flagStatus = await I.manageFlags();\nawait I.clickTab('Case Flags');\nawait I.validateCaseFlagTab(flagStatus);\nlogger.info('manage case event completed and verified');",
              "err": {},
              "uuid": "7fc20b3c-fe19-4550-a8d9-36ae297778e9",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Judge creates case flag  @nightly",
              "fullTitle": "Contested Case flag: Judge creates case flag  @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nI.signInIdam(judgeUserName, judgePassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.applicationDraftedEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');\nlogger.info('case flag created and verified');",
              "err": {},
              "uuid": "30921ca0-396a-4b53-9504-a508fb91fd63",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker creates case flag for schedule 1 case @nightly",
              "fullTitle": "Contested Case flag: Caseworker creates case flag for schedule 1 case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-schedule1-solicitor-create-case.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.applicationDraftedEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');\nlogger.info('case flag created and verified for schedule 1 case');",
              "err": {},
              "uuid": "223607d4-622e-4cc7-a543-7aeaef3ef5da",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Create case flag with General Application @nightly",
              "fullTitle": "Contested Case flag: Create case flag with General Application @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    const createGeneralApplication = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'createGeneralApplication', './test/data/ccd-contested-general-application-data.json');\n    const referToJudgeApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_generalApplicationReferToJudge', './test/data/ccd-contested-general-application-refer-to-judge-data.json');\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    await I.createCaseFlag();\n    await I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.awaitingJudiciaryResponseEndState);\n    await I.validateCaseFlagAlertMessage();\n    await I.validateCaseFlagTab('Active');\n    logger.info('case flag created and verified for schedule 1 case');",
              "err": {},
              "uuid": "1613886a-fdd2-4bb4-8c24-ad7d94d7af61",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Case flag for Paper Case @nightly",
              "fullTitle": "Contested Case flag: Case flag for Paper Case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(caseWorkerUserName, caseWorkerPassword, './test/data/ccd-contested-paper-case-basic-data.json', 'FinancialRemedyContested', 'FR_newPaperCase');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.createCaseFlag();\nawait I.verifyCaseFlagEvent(verifyTabText.caseType, verifyTabText.historyTab.createCaseFlagEvent, verifyTabText.historyTab.applicationDraftedEndState);\nawait I.validateCaseFlagAlertMessage();\nawait I.validateCaseFlagTab('Active');\nlogger.info('case flag created and verified');",
              "err": {},
              "uuid": "f447c670-8975-4b03-afdd-c82ed39f45ce",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "8c309d7f-ce52-4e77-a6d4-efd90a144349",
            "7fc20b3c-fe19-4550-a8d9-36ae297778e9",
            "30921ca0-396a-4b53-9504-a508fb91fd63",
            "223607d4-622e-4cc7-a543-7aeaef3ef5da",
            "1613886a-fdd2-4bb4-8c24-ad7d94d7af61",
            "f447c670-8975-4b03-afdd-c82ed39f45ce"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "bbcd4feb-0999-491a-b9ef-d17f7fa25df7",
          "title": "Contested Events",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_events_test.js",
          "file": "/test/functional/contested_events_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Contested Events \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "cc0ec2f9-f3f5-47b9-a97b-68cebd10fe44",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Contested Events \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "587c1cd7-44e4-4a60-816a-26ef402e5daf",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Contested Events \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "b80aac73-2510-4ff3-aadf-fb7731be984f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Contested Events \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "0e452f69-2e0e-495b-8c8c-fc80c5604f04",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Manage Confidential Documents @nightly",
              "fullTitle": "Contested Events: Manage Confidential Documents @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    await I.manageConfidentialDocuments();\n    logger.info('Manage confidential documents event completed');\n    await I.verifyContestedConfidentialTabData(verifyTabText.historyTab.manageConfidentialDocuments, verifyTabText.confidentialDocumentsTab);\n    logger.info('Confidential documents verified on Confidential documents tab');",
              "err": {},
              "uuid": "3ea64c53-6feb-4074-9724-11877af6251d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Update Contact Details for contested Case @nightly ",
              "fullTitle": "Contested Events: Update Contact Details for contested Case @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//caseworker, type-matrimonial\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.updateContactDetails();",
              "err": {},
              "uuid": "0f661822-8f9f-4738-baae-ae013db874d6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Add Note  @nightly ",
              "fullTitle": "Contested Events: Contested Add Note  @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Matrimonial\n   const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n   const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n   const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n   const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n   I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n   I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n   await I.addNote();",
              "err": {},
              "uuid": "c1476266-52d7-4e2b-9cf0-6aa90b77eb10",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker refunds an issued case @nightly",
              "fullTitle": "Contested Events: Caseworker refunds an issued case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logger.info(\"Refund test starting\");\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.refundCase();\nlogger.info(\"Refund test completed\");",
              "err": {},
              "uuid": "5db29b75-7b95-4bd9-a934-dd2762050e7a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Add Note @nightly ",
              "fullTitle": "Contested Events: Contested Add Note @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Matrimonial\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.addNote();",
              "err": {},
              "uuid": "0e1537e8-b59f-42ef-8195-b3a0523c01bd",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Manage Barrister @nightly",
              "fullTitle": "Contested Events: Contested Manage Barrister @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Matrimonial\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.manageBarristerApplicant();\nawait I.manageBarristerRespondent();\nawait I.verifyManageBarristerEvent(verifyTabText.caseType, verifyTabText.historyTab.manageBarristerEvent, verifyTabText.historyTab.issueApplicationEndState);\nawait I.clickTab('Change of representatives');\nawait I.waitForText('FinRem-1-Org', 30);\nawait I.changeOfRepresentativesTab(verifyTabText.historyTab.manageBarristerEvent);\nlogger.info(\"manage barrister tab verified...\");",
              "err": {},
              "uuid": "64ac4051-d3f4-4406-8d27-a575b1b23569",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "List for hearing contested case @nightly",
              "fullTitle": "Contested Events: List for hearing contested case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    logger.info('---------------------case number------------------------', caseId);\n    logger.info('--------------case worker created case ' +caseId+ ' successfully-----------------');\n    await I.allocateJudge();\n    await I.see('Allocate to Judge');\n    await I.signOut();\n    await I.signInIdam(judgeUserName, judgePassword);\n    await I.waitForText('Judicial Case Manager');\n    await I.enterCaseReference(caseId);\n    await I.see('Gate Keeping And Allocation');\n    await I.giveAllocationDirection();\n    await I.signOut();\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.waitForText('Manage Cases');\n    await I.enterCaseReference(caseId);\n    await I.listForHearing();\n    I.waitForText('List for Hearing');",
              "err": {},
              "uuid": "eb0cddda-4523-45fb-b069-ff78d4ca3c5d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested E2E @nightly @preview",
              "fullTitle": "Contested Events: Contested E2E @nightly @preview",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\nconst allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\nconst listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.uploadDraftOrder();\nawait I.signOut();\nawait I.signInIdam(judgeUserName, judgePassword);\nawait I.waitForText('Judicial Case Manager');\nawait I.enterCaseReference(caseId);\nawait I.waitForText('Upload Draft Order');\nawait I.draftOrderApprove();\nawait I.signOut();\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.waitForText('Manage Cases');\nawait I.enterCaseReference(caseId);\nawait I.uploadOrder();\nawait I.sendOrder();\nlogger.info('-----------completed E2E contested test for -------------', caseId);",
              "err": {},
              "uuid": "8f20c986-054d-4b32-bfb5-fadb42c15d0c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker runs List for Interim Hearing @nightly",
              "fullTitle": "Contested Events: Caseworker runs List for Interim Hearing @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logger.info(\"List for Interim Hearing test starting\");\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.listForInterimHearing();\nawait I.verifyListForInterimHearing();\nlogger.info(\"List Of Interim Hearing Completed\");",
              "err": {},
              "uuid": "971ca06a-d827-4e20-aa28-44ea4fc3aba7",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "3ea64c53-6feb-4074-9724-11877af6251d",
            "0f661822-8f9f-4738-baae-ae013db874d6",
            "c1476266-52d7-4e2b-9cf0-6aa90b77eb10",
            "5db29b75-7b95-4bd9-a934-dd2762050e7a",
            "0e1537e8-b59f-42ef-8195-b3a0523c01bd",
            "64ac4051-d3f4-4406-8d27-a575b1b23569",
            "eb0cddda-4523-45fb-b069-ff78d4ca3c5d",
            "8f20c986-054d-4b32-bfb5-fadb42c15d0c",
            "971ca06a-d827-4e20-aa28-44ea4fc3aba7"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "functional-output/xui/parallel_chunk1_4697d80bdefdef94aaba8756c0032a6f_1",
        "reportName": "FinRemTests",
        "inlineAssets": true
      },
      "version": "5.1.0"
    }
  }
}