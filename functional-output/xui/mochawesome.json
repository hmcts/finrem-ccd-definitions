{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-04-12T16:50:04.706Z",
    "end": "2023-04-12T16:50:46.670Z",
    "duration": 41964,
    "testsRegistered": 23,
    "passPercent": 4.3478260869565215,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 22,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "af0fb214-869f-4337-87c6-f212e6d159b1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8703daa8-debc-4ee9-8a79-200aa3332424",
          "title": "Admin Web",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/admin_test.js",
          "file": "/test/functional/admin_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Admin Web \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "1a560efd-b49b-427b-92cf-3ebb2dff608c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Admin Web \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "283ca9fa-6db1-4b4d-b0d7-2a1bdf6ef1a6",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Admin Web \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "4101a494-8879-4273-a55b-c2e4869a9be2",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Admin Web \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "12d70595-a9f3-4b3e-998a-d71453782da3",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "add all the roles @pipeline",
              "fullTitle": "Admin Web: add all the roles @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.loginToAdminConsole();\nI.createRole('citizen');\nI.createRole('caseworker');\nI.createRole('caseworker-divorce-financialremedy-courtadmin');\nI.createRole('caseworker-divorce-financialremedy-solicitor');\nI.createRole('caseworker-divorce-financialremedy-judiciary');\nI.createRole('caseworker-divorce-systemupdate');\nI.createRole('caseworker-divorce-bulkscan');\nI.createRole('caseworker-divorce-financialremedy');\nI.createRole('caseworker-caa');\nI.createRole('caseworker-divorce-financialremedy-superuser');\nI.createRole('caseworker-approver');\nI.click('Manage User Roles');\nI.see('citizen');\nI.see('caseworker');\nI.see('caseworker-divorce-financialremedy-courtadmin');\nI.see('caseworker-divorce-financialremedy-solicitor');\nI.see('caseworker-divorce-financialremedy-judiciary');\nI.see('caseworker-divorce-systemupdate');\nI.see('caseworker-divorce-bulkscan');\nI.see('caseworker-divorce-financialremedy');\nI.see('caseworker-caa');\nI.see('caseworker-divorce-financialremedy-superuser')\nI.see('caseworker-approver');",
              "err": {},
              "uuid": "3f9c8c3c-d4b0-497c-aeb1-2eabf802290a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "3f9c8c3c-d4b0-497c-aeb1-2eabf802290a"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "2e7d8839-e07d-4049-8003-492868ee6dc1",
          "title": "create Consented case ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/consented_test.js",
          "file": "/test/functional/consented_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "create Consented case  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "e248f8dc-9393-49a1-8515-607f5387033f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "create Consented case  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "6041a018-5795-419b-8a99-2db868ec373a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "create Consented case  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "40d33f52-7500-4525-8713-1ba1c09e03c5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "create Consented case  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "76e20a12-98a4-4553-acdb-bbef6dd94fa5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Consent Case Creation For Caseworker @nightly @pipeline",
              "fullTitle": "create Consented case : Consent Case Creation For Caseworker @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-demo-consented-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\n  /* eslint-disable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.hwfPaymentAcceptedEvent, verifyTabText.historyTab.hwfPaymentAcceptedEndState);\n    I.paymentDetailsTab(verifyTabText.caseType, verifyTabText.paymentDetailsTab.tabName);\n    I.judgeDetailsTab(verifyTabText.caseType, verifyTabText.judgeDetailsTab.tabName, verifyTabText.historyTab.hwfPaymentAcceptedEvent);\n  }\n}",
              "err": {},
              "uuid": "d3cfb8b1-0844-4c6b-a716-774094f6ec48",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case Creation For Judge @nightly @pipeline",
              "fullTitle": "create Consented case : Consent Case Creation For Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-demo-consented-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.issueApplicationEvent, verifyTabText.historyTab.issueApplicationEndState);\n    I.paymentDetailsTab(verifyTabText.caseType, verifyTabText.paymentDetailsTab.tabName);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  }\n}",
              "err": {},
              "uuid": "a8ed0098-ae39-4f2f-bdff-98574072608b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case approve and send order  @nightly @pipeline ",
              "fullTitle": "create Consented case : Consent Case approve and send order  @nightly @pipeline ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nconst approveOrder = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyMVP2', 'FR_approveApplication', './test/data/ccd-consented-judge-approve-data.json');\nconst sendOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_sendOrderForApproved', './test/data/ccd-caseworker-send-order.json');\n\n  /* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.sendOrderEvent, verifyTabText.historyTab.approveSendOrderEndState);\n  I.approvedOrderTab(verifyTabText.caseType, verifyTabText.approvedOrderTab.tabName);\n  }",
              "err": {},
              "uuid": "1f81cc1d-b4f5-4ea7-9c19-514e8354120c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case Creation by Solicitor @nightly",
              "fullTitle": "create Consented case : Consent Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  I.signInIdam(solicitorUserName, solicitorPassword);\n  I.wait('2');\n  await I.createCase('Financial Remedy Consented', 'Consent Order Application');\n  await I.solicitorCreate(solRef);\n  await I.divorceDetails();\n  await I.applicantDetails();\n  await I.consentedRespondentDetails();\n  await I.natureOfApplication();\n  await I.consentOrder();\n  await I.d81Question();\n  await I.optionalDocuments();\n  await I.consentedOtherDocuments();\n  await I.savingApplicationInformation('consented');\n  await I.checkYourAnswers();\n  // amend event\n  I.amendApplicationDetails();\n  // hwf payment submission\n  await I.caseSubmitAuthorisation('consented');\n  await I.paymentPage(false);\n  await I.hwfPaymentDetails();\n  await I.paymentSubmission();\n  await I.savingApplicationInformation('consented');\n  await I.finalPaymentSubmissionPage();\n  await I.finalInformationPage();\n  I.waitForText('History', '30');\n}",
              "err": {},
              "uuid": "b71dd4f5-3cb8-43b3-ac69-d4f80ddc4411",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "d3cfb8b1-0844-4c6b-a716-774094f6ec48",
            "a8ed0098-ae39-4f2f-bdff-98574072608b",
            "1f81cc1d-b4f5-4ea7-9c19-514e8354120c",
            "b71dd4f5-3cb8-43b3-ac69-d4f80ddc4411"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
          "title": "create Contested case ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_test.js",
          "file": "/test/functional/contested_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "create Contested case  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "51b750b7-5d81-4959-b27b-87d861c342a1",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "create Contested case  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 784,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "271ad0f3-e9c3-4dcd-b988-5024ed8f3a13",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "create Contested case  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "43fd5da9-9b20-404f-a190-b48024f4baec",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "create Contested case  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 69,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "eb5a80ae-1665-4949-9d64-5363eea78aed",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Contested Case Creation For Caseworker @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Caseworker @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.hwfPaymentAcceptedEvent, verifyTabText.historyTab.hwfPaymentAcceptedEndState);\n  }\n}",
              "err": {},
              "uuid": "e757b900-ac44-42d7-bc3d-1f919cd5238d",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Creation For Judge @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// if (runningEnv === 'demo') {\n//   const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n//   /* eslint-disable */\n//   const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n//   const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n//   const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n//   const assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\n// } else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.assignToJudgeEvent, verifyTabText.historyTab.assignToJudgeEndState);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n // }\n}",
              "err": {},
              "uuid": "3ae0b9ef-89cf-4ae1-81a9-3eb59a65963b",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Creation For Ready For Hearing @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Ready For Hearing @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\nconst allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\nconst listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\nconst submitUploadCaseFiles = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_submitUploadedCaseFiles', './test/data/ccd-contested-list-for-hearing.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.submitUploadCaseFilesEvent, verifyTabText.historyTab.submitUploadCaseFilesEndState);\n  I.schedulingAndListingTab(verifyTabText.caseType, verifyTabText.schedulingAndListingTab.tabName);\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n}",
              "err": {},
              "uuid": "77737fd5-5471-4d12-8883-2efb180d72c2",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Approved and Send Order  @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Approved and Send Order  @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\nconst allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\nconst listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\nconst submitUploadCaseFiles = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_submitUploadedCaseFiles', './test/data/ccd-contested-list-for-hearing.json');\nconst solicitorDraftDirectionOrder = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_solicitorDraftDirectionOrder', './test/data/ccd-contested-solicitor-draft-direction-order.json');\nconst draftOrderApproved = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_draftOrderApproved', './test/data/ccd-contested-judge-approved.json');\nconst uploadOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_directionOrder', './test/data/ccd-contested-caseworker-upload-order.json');\nconst sendOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_sendOrder', './test/data/ccd-caseworker-send-order.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.sendOrderEvent, verifyTabText.historyTab.sendOrderState);\n  I.wait(2);\n  I.click({css: '.mat-tab-header-pagination-after'});\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  I.contestedOrderTab(verifyTabText.caseType, verifyTabText.OrdersTab.tabName);\n}",
              "err": {},
              "uuid": "522a626e-19a8-4eba-879d-500a31d9fefd",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consented case in Contested @nightly @pipeline",
              "fullTitle": "create Contested case : Consented case in Contested @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-demo-contested-to-consented.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-contested-to-consented.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.consentOrderEvent, verifyTabText.historyTab.consentOrderEndState);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n    I.consentOrderProcessTab(verifyTabText.caseType, verifyTabText.consentOrderProcessTab.tabName);\n  }\n}",
              "err": {},
              "uuid": "57ac660c-a06a-4c26-9a08-2b0500ffecbf",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consented case in Contested Assigned to Judge @nightly @pipeline",
              "fullTitle": "create Contested case : Consented case in Contested Assigned to Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-contested-to-consented.json');\nconst contestAssignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_assignToJudgeConsent', './test/data/ccd-contested-to-consented.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.assignToJudgeConsentEvent, verifyTabText.historyTab.assignToJudgeConsentEndState);\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  I.consentOrderProcessTab(verifyTabText.caseType, verifyTabText.consentOrderProcessTab.tabName);\n}",
              "err": {},
              "uuid": "55ac404b-55f1-44a4-920f-918805ed2c67",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Paper Case Creation @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Paper Case Creation @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(caseWorkerUserName, caseWorkerPassword, './test/data/ccd-demo-contested-paper-case-basic-data.json', 'FinancialRemedyContested', 'FR_newPaperCase');\n  /* eslint-disable */\n  const manualPayment = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_manualPayment', './test/data/ccd-demo-contested-paper-case-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(caseWorkerUserName, caseWorkerPassword, './test/data/ccd-contested-paper-case-basic-data.json', 'FinancialRemedyContested', 'FR_newPaperCase');\n  const manualPayment = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_manualPayment', './test/data/ccd-contested-paper-case-basic-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedPaperTabData(verifyContestedPaperTabText.caseType, verifyContestedPaperTabText.historyTab.manualPaymentEvent, verifyContestedPaperTabText.historyTab.manualPaymentEndState);\n  }\n}",
              "err": {},
              "uuid": "701b560c-9516-4513-849d-14e7bb715898",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested share case @nightly @pipeline",
              "fullTitle": "create Contested case : Contested share case @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  /* eslint-disable */\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json',solRef);\n/* eslint-enable */\n  I.signInIdam(solicitorUserName, solicitorPassword);\n  I.assignContestedShareCase(caseId, solRef);\n}",
              "err": {},
              "uuid": "a3233f84-e7ce-4cf9-a558-c5180037d6e9",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Matrimonial Case Creation by Solicitor @nightly",
              "fullTitle": "create Contested case : Contested Matrimonial Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(solicitorUserName, solicitorPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedSolicitorCreate(solRef, 'Matrimonial');\nawait I.contestedDivorceDetails();\nawait I.contestedApplicantDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplication();\nawait I.contestedOrderForChildren();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Matrimonial');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "40cda7ee-245b-458b-b0fc-85ff39993fde",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Schedule 1 Case Creation by Solicitor @nightly",
              "fullTitle": "create Contested case : Contested Schedule 1 Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(solicitorUserName, solicitorPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedSolicitorCreate(solRef, 'Schedule1');\nawait I.contestedApplicantDetails();\nawait I.childrenDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplicationForSchedule1();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Schedule1');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "2026b10d-c98a-49ac-a665-329fecc67ee0",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Schedule 1 Case Creation by caseworker @nightly",
              "fullTitle": "create Contested case : Contested Schedule 1 Case Creation by caseworker @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedCaseworkerCreate(caRef, 'Schedule1', true);\nawait I.contestedApplicantDetails();\nawait I.childrenDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplicationForSchedule1();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Schedule1');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "94018e4f-2f6d-496f-94bf-cbb5aa88f7e1",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Matrimonial Case Creation by Caseworker @nightly",
              "fullTitle": "create Contested case : Contested Matrimonial Case Creation by Caseworker @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.wait('2');\n  await I.createCase('FinancialRemedyContested', 'Form A Application');\n  await I.contestedCaseworkerCreate(caRef, 'Matrimonial', true);\n  await I.contestedDivorceDetails();\n  await I.contestedApplicantDetails();\n  await I.contestedRespondentDetails();\n  await I.contestedNatureOfApplication();\n  await I.contestedOrderForChildren();\n  await I.fastTrack();\n  await I.complexityList();\n  await I.applyingToCourt();\n  await I.mediationQuestion();\n  await I.miamCertification();\n  await I.contestedOtherDocuments();\n  await I.contestedCheckYourAnswers('Matrimonial');\n  I.waitForText('Form A Application', '60');\n  await I.manualPayment();\n  await I.issueApplication();\n}",
              "err": {},
              "uuid": "5e673ab4-9f77-4517-ad5c-9ba6816ca688",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Upload Case Files (Confidential Documents) @nightly",
              "fullTitle": "create Contested case : Upload Case Files (Confidential Documents) @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//login as a caseworker, create contested case\nif (nightlyTest === 'true') {\n    //TODO- issue case using API\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.wait('2');\n  await I.createCase('FinancialRemedyContested', 'Form A Application');\n  await I.contestedCaseworkerCreate(caRef, 'Matrimonial', true);\n  await I.contestedDivorceDetails();\n  await I.contestedApplicantDetails();\n  await I.contestedRespondentDetails();\n  await I.contestedNatureOfApplication();\n  await I.contestedOrderForChildren();\n  await I.fastTrack();\n  await I.complexityList();\n  await I.applyingToCourt();\n  await I.mediationQuestion();\n  await I.miamCertification();\n  await I.contestedOtherDocuments();\n  await I.contestedCheckYourAnswers('Matrimonial');\n  I.waitForText('Form A Application', '60');\n  await I.manualPayment();\n  await I.issueApplication();\n  await I.uploadCaseFiles();\n  await I.verifyContestedConfidentialTabData(verifyTabText.historyTab.uploadCaseFiles, verifyTabText.confidentialDocumentsTab);\n  logger.info('Confidential documents verified on Confidential documents tab');\n}",
              "err": {},
              "uuid": "bc92253e-5f6b-4010-aa93-f62f5ee1f536",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Manage Confidential Documents @nightly",
              "fullTitle": "create Contested case : Manage Confidential Documents @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    await I.manageConfidentialDocuments();\n    logger.info('Manage confidential documents event completed');\n    await I.verifyContestedConfidentialTabData(verifyTabText.historyTab.manageConfidentialDocuments, verifyTabText.confidentialDocumentsTab);\n    logger.info('Confidential documents verified on Confidential documents tab');",
              "err": {},
              "uuid": "1a460da1-aaa3-42d2-9b40-ec4890431273",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "progress to listing for contested case @nightly",
              "fullTitle": "create Contested case : progress to listing for contested case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    logger.info('---------------------case number------------------------', caseId);\n    logger.info('--------------case worker created case ' +caseId+ ' successfully-----------------');\n    await I.allocateJudge();\n    await I.see('Allocate to Judge');\n    await I.signOut();\n    await I.signInIdam(judgeUserName, judgePassword);\n    await I.waitForText('Judicial Case Manager');\n    await I.enterCaseReference(caseId);\n    await I.see('Gate Keeping And Allocation');\n    await I.giveAllocationDirection();\n    await I.signOut();\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.waitForText('Manage Cases');\n    await I.enterCaseReference(caseId);\n    await I.listForHearing();\n     I.waitForText('List for Hearing');",
              "err": {},
              "uuid": "5a91a24a-1530-4a39-84a7-78cdc5a68545",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Update Contact Details for contested Case @nightly ",
              "fullTitle": "create Contested case : Update Contact Details for contested Case @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//caseworker, type-matrimonial\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  await I.updateContactDetails();",
              "err": {},
              "uuid": "d806d85a-4de2-4d84-a7b2-894020e77ce9",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker refunds an issued case @Johnny",
              "fullTitle": "create Contested case : Caseworker refunds an issued case @Johnny",
              "timedOut": false,
              "duration": 41107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Refund test starting\");\n//Using API to create a case as a solicitor\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconsole.log(\"Case created with ID\" + caseId)\n\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);",
              "err": {},
              "uuid": "4748bf94-5c55-485f-b14e-710206d592c2",
              "parentUUID": "4b502c73-829c-4aaf-be9d-7a3fda2f3428",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4748bf94-5c55-485f-b14e-710206d592c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [
            "e757b900-ac44-42d7-bc3d-1f919cd5238d",
            "3ae0b9ef-89cf-4ae1-81a9-3eb59a65963b",
            "77737fd5-5471-4d12-8883-2efb180d72c2",
            "522a626e-19a8-4eba-879d-500a31d9fefd",
            "57ac660c-a06a-4c26-9a08-2b0500ffecbf",
            "55ac404b-55f1-44a4-920f-918805ed2c67",
            "701b560c-9516-4513-849d-14e7bb715898",
            "a3233f84-e7ce-4cf9-a558-c5180037d6e9",
            "40cda7ee-245b-458b-b0fc-85ff39993fde",
            "2026b10d-c98a-49ac-a665-329fecc67ee0",
            "94018e4f-2f6d-496f-94bf-cbb5aa88f7e1",
            "5e673ab4-9f77-4517-ad5c-9ba6816ca688",
            "bc92253e-5f6b-4010-aa93-f62f5ee1f536",
            "1a460da1-aaa3-42d2-9b40-ec4890431273",
            "5a91a24a-1530-4a39-84a7-78cdc5a68545",
            "d806d85a-4de2-4d84-a7b2-894020e77ce9"
          ],
          "duration": 41107,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "873dda84-dc1f-4f3f-ae75-5ec563d7c760",
          "title": "Create Cases for Respondent Journey ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested-respondent_test.js",
          "file": "/test/functional/contested-respondent_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Create Cases for Respondent Journey  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "afb01890-d657-4b1b-833f-9b5bf6c97b87",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Create Cases for Respondent Journey  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "d917fbc3-f39e-4f6c-b561-750af693b124",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Create Cases for Respondent Journey  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "81d28a96-c830-40d5-92e6-d50978cb93f6",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Create Cases for Respondent Journey  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "ac78da8b-edb5-4aeb-bb64-f067a9db1fbb",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create and assign Contested Case To Respondent @pipeline",
              "fullTitle": "Create Cases for Respondent Journey : Create and assign Contested Case To Respondent @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  I.signInXuiOrg(caaUsername, caaPassword);\n  I.assignContestedCase(caseId, respondentEmail);\n} else {\n  if (nightlyTest === 'true') {\n    const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    I.signInXuiOrg(caaUsername, caaPassword);\n    I.assignContestedCase(caseId, respondentEmail);\n  }\n}",
              "err": {},
              "uuid": "8c37bbfd-117a-419c-b72d-33b2082a5fb1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "8c37bbfd-117a-419c-b72d-33b2082a5fb1"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "./functional-output/xui",
        "reportName": "FinRemTests",
        "inlineAssets": true
      },
      "version": "5.1.0"
    }
  }
}