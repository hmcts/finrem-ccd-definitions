{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-04-19T14:23:43.656Z",
    "end": "2023-04-19T14:23:52.408Z",
    "duration": 8752,
    "testsRegistered": 31,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 30,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "6501667b-12b9-42e3-a675-ed003a8b322f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8151cb58-6fde-45be-82f4-f123ccb9dc8f",
          "title": "Admin Web",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/admin_test.js",
          "file": "/test/functional/admin_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Admin Web \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "bac52722-c1f9-4a81-8074-2f2dd7dac987",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Admin Web \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "38de94ec-4b66-4ba5-b1cf-39cb87f7f3a5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Admin Web \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "fb4b9483-64e9-47ca-997e-91f633a9562a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Admin Web \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "8c5a58fe-26e2-486f-8a55-1afb95acec58",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "add all the roles @pipeline",
              "fullTitle": "Admin Web: add all the roles @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.loginToAdminConsole();\nI.createRole('citizen');\nI.createRole('caseworker');\nI.createRole('caseworker-divorce-financialremedy-courtadmin');\nI.createRole('caseworker-divorce-financialremedy-solicitor');\nI.createRole('caseworker-divorce-financialremedy-judiciary');\nI.createRole('caseworker-divorce-systemupdate');\nI.createRole('caseworker-divorce-bulkscan');\nI.createRole('caseworker-divorce-financialremedy');\nI.createRole('caseworker-caa');\nI.createRole('caseworker-divorce-financialremedy-superuser');\nI.createRole('caseworker-approver');\nI.click('Manage User Roles');\nI.see('citizen');\nI.see('caseworker');\nI.see('caseworker-divorce-financialremedy-courtadmin');\nI.see('caseworker-divorce-financialremedy-solicitor');\nI.see('caseworker-divorce-financialremedy-judiciary');\nI.see('caseworker-divorce-systemupdate');\nI.see('caseworker-divorce-bulkscan');\nI.see('caseworker-divorce-financialremedy');\nI.see('caseworker-caa');\nI.see('caseworker-divorce-financialremedy-superuser')\nI.see('caseworker-approver');",
              "err": {},
              "uuid": "341d0b06-7082-4c86-add5-5e3ec6e3e549",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "341d0b06-7082-4c86-add5-5e3ec6e3e549"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "c669cd15-8192-473e-92c4-0da9aaf370bd",
          "title": "Consented case flag",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/consented_caseflag_test.js",
          "file": "/test/functional/consented_caseflag_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Consented case flag \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "d1ff890e-6d37-43ea-9ea2-0a51872f5b22",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Consented case flag \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "3a66faf2-fac2-41e4-bb08-bc5b4c702a6a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Consented case flag \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "a1dbcbc0-9bf7-4d39-9fcf-d8700c8b1d3e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Consented case flag \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "54e71c40-16a3-4c77-a450-b6e601a308a8",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "0ab32d42-c252-46b1-8a8a-6a9331365fb6",
          "title": "create Consented case ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/consented_test.js",
          "file": "/test/functional/consented_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "create Consented case  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "45e38053-1809-4dfa-9fb0-6257fa56c2e9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "create Consented case  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "3e97b01e-097d-4db4-9809-ae08cb8e926e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "create Consented case  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "3af8cd26-848a-4cab-b088-a6a5b3af0d3c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "create Consented case  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "9bfcf8e0-1778-4ac6-b96a-10925e487b08",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Consent Case Creation For Caseworker @nightly @pipeline",
              "fullTitle": "create Consented case : Consent Case Creation For Caseworker @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-demo-consented-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\n  /* eslint-disable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.hwfPaymentAcceptedEvent, verifyTabText.historyTab.hwfPaymentAcceptedEndState);\n    I.paymentDetailsTab(verifyTabText.caseType, verifyTabText.paymentDetailsTab.tabName);\n    I.judgeDetailsTab(verifyTabText.caseType, verifyTabText.judgeDetailsTab.tabName, verifyTabText.historyTab.hwfPaymentAcceptedEvent);\n  }\n}",
              "err": {},
              "uuid": "7f168bcf-3e1c-4046-b326-ef7196b4a0fd",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case Creation For Judge @nightly @pipeline",
              "fullTitle": "create Consented case : Consent Case Creation For Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-demo-consented-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.issueApplicationEvent, verifyTabText.historyTab.issueApplicationEndState);\n    I.paymentDetailsTab(verifyTabText.caseType, verifyTabText.paymentDetailsTab.tabName);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  }\n}",
              "err": {},
              "uuid": "5b0e3ac3-dbb4-4034-b269-37e16888b84f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case approve and send order  @nightly @pipeline ",
              "fullTitle": "create Consented case : Consent Case approve and send order  @nightly @pipeline ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nconst approveOrder = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyMVP2', 'FR_approveApplication', './test/data/ccd-consented-judge-approve-data.json');\nconst sendOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_sendOrderForApproved', './test/data/ccd-caseworker-send-order.json');\n\n  /* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.sendOrderEvent, verifyTabText.historyTab.approveSendOrderEndState);\n  I.approvedOrderTab(verifyTabText.caseType, verifyTabText.approvedOrderTab.tabName);\n  }",
              "err": {},
              "uuid": "52836a82-8c85-4e57-adcb-b232ef82caab",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case Creation by Solicitor @nightly",
              "fullTitle": "create Consented case : Consent Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  I.signInIdam(solicitorUserName, solicitorPassword);\n  I.wait('2');\n  await I.createCase('Financial Remedy Consented', 'Consent Order Application');\n  await I.solicitorCreate(solRef);\n  await I.divorceDetails();\n  await I.applicantDetails();\n  await I.consentedRespondentDetails();\n  await I.natureOfApplication();\n  await I.consentOrder();\n  await I.d81Question();\n  await I.optionalDocuments();\n  await I.consentedOtherDocuments();\n  await I.savingApplicationInformation('consented');\n  await I.checkYourAnswers();\n  // amend event\n  I.amendApplicationDetails();\n  // hwf payment submission\n  await I.caseSubmitAuthorisation('consented');\n  await I.paymentPage(false);\n  await I.hwfPaymentDetails();\n  await I.paymentSubmission();\n  await I.savingApplicationInformation('consented');\n  await I.finalPaymentSubmissionPage();\n  await I.finalInformationPage();\n  I.waitForText('History', '30');\n}",
              "err": {},
              "uuid": "f8f494e4-106b-4e93-87d4-8b70dc593af0",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "7f168bcf-3e1c-4046-b326-ef7196b4a0fd",
            "5b0e3ac3-dbb4-4034-b269-37e16888b84f",
            "52836a82-8c85-4e57-adcb-b232ef82caab",
            "f8f494e4-106b-4e93-87d4-8b70dc593af0"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "d1c32367-d085-4784-8393-4df045e70fa5",
          "title": "Contested Case flag",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_caseflag_test.js",
          "file": "/test/functional/contested_caseflag_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Contested Case flag \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "e6e59934-126c-46d9-990f-a86a575ffe8d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Contested Case flag \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "e0b17010-2e06-46e6-9a53-a89945dabde6",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Contested Case flag \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "d3a39154-8d7f-4207-a64c-a5c8b280f8dd",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Contested Case flag \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "cd2cadc5-8193-475b-a506-fc982720a804",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "860af75b-0c61-4719-9c17-1a2cb82de93f",
          "title": "Contested Events",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_events_test.js",
          "file": "/test/functional/contested_events_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Contested Events \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "a7799a1d-98b0-4cde-b3d5-be24ea8086df",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Contested Events \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 865,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "c10a4fc4-53b7-4c4f-96a4-70859d53ce96",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Contested Events \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "22ae16a6-38b0-4573-a6fe-600cf8ff6696",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Contested Events \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 95,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "d0c69c8a-e4da-40df-89a0-099cf9a2f160",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Upload Case Files (Confidential Documents) @nightly",
              "fullTitle": "Contested Events: Upload Case Files (Confidential Documents) @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//login as a caseworker, create contested case\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.uploadCaseFiles();\nawait I.verifyContestedConfidentialTabData(verifyTabText.historyTab.uploadCaseFiles, verifyTabText.confidentialDocumentsTab);\nlogger.info('Confidential documents verified on Confidential documents tab');",
              "err": {},
              "uuid": "8249a389-e082-4bdb-9f2d-744eef790b06",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Manage Confidential Documents @nightly",
              "fullTitle": "Contested Events: Manage Confidential Documents @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    await I.manageConfidentialDocuments();\n    logger.info('Manage confidential documents event completed');\n    await I.verifyContestedConfidentialTabData(verifyTabText.historyTab.manageConfidentialDocuments, verifyTabText.confidentialDocumentsTab);\n    logger.info('Confidential documents verified on Confidential documents tab');",
              "err": {},
              "uuid": "6f04af96-7b77-4b87-80ce-d046f16defd9",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Update Contact Details for contested Case @nightly ",
              "fullTitle": "Contested Events: Update Contact Details for contested Case @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//caseworker, type-matrimonial\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.updateContactDetails();",
              "err": {},
              "uuid": "ac3c405c-678f-4336-99c7-c4dee0b590db",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Add Note  @nightly ",
              "fullTitle": "Contested Events: Contested Add Note  @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Matrimonial\n   const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n   const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n   const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n   const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n   I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n   I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n   await I.addNote();",
              "err": {},
              "uuid": "be9f4c57-5109-4a39-b93b-2ebbb0ac38b0",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Matrimonial case Amend application and Case submission  by Solicitor @nightly",
              "fullTitle": "Contested Events: Contested Matrimonial case Amend application and Case submission  by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//The json file used to create case is new case data - this can be used to create a case via solicitor, case type matrimonial.\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-solicitor-create-case.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nif (nightlyTest === 'true') {\n    await I.signInIdam(solicitorUserName, solicitorPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    //amend application\n    I.contestedAmendApplicationDetails();\n    //case submission\n    await I.caseSubmitAuthorisation('contested');\n    await I.paymentPage(false);\n    await I.hwfPaymentDetails();\n    await I.paymentSubmission();\n    await I.savingApplicationInformation('contested');\n    await I.finalPaymentSubmissionPage();\n    await I.finalInformationPage();\n    I.see('Case Submission');\n}",
              "err": {},
              "uuid": "2765c5af-6312-464c-adb2-bcc9c8f645ba",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker refunds an issued case @nightly",
              "fullTitle": "Contested Events: Caseworker refunds an issued case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logger.info(\"Refund test starting\");\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.refundCase();\nlogger.info(\"Refund test completed\");",
              "err": {},
              "uuid": "222c73f0-914f-48d2-b672-e673349fee59",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Add Note @nightly ",
              "fullTitle": "Contested Events: Contested Add Note @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Matrimonial\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.addNote();",
              "err": {},
              "uuid": "7c182a7e-682a-42a1-8f4f-be8a0c7f106d",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Manage Barrister @nightly",
              "fullTitle": "Contested Events: Contested Manage Barrister @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Matrimonial\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.manageBarristerApplicant();\nawait I.manageBarristerRespondent();\nawait I.verifyManageBarristerEvent(verifyTabText.caseType, verifyTabText.historyTab.manageBarristerEvent, verifyTabText.historyTab.issueApplicationEndState);\nawait I.clickTab('Change of representatives');\nawait I.waitForText('FinRem-1-Org', 30);\nawait I.changeOfRepresentativesTab(verifyTabText.historyTab.manageBarristerEvent);\nlogger.info(\"manage barrister tab verified...\");",
              "err": {},
              "uuid": "26fa8e24-3e46-49f9-ba55-00f1227e92e8",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "List for hearing contested case @nightly",
              "fullTitle": "Contested Events: List for hearing contested case @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    logger.info('---------------------case number------------------------', caseId);\n    logger.info('--------------case worker created case ' +caseId+ ' successfully-----------------');\n    await I.allocateJudge();\n    await I.see('Allocate to Judge');\n    await I.signOut();\n    await I.signInIdam(judgeUserName, judgePassword);\n    await I.waitForText('Judicial Case Manager');\n    await I.enterCaseReference(caseId);\n    await I.see('Gate Keeping And Allocation');\n    await I.giveAllocationDirection();\n    await I.signOut();\n    await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    await I.waitForText('Manage Cases');\n    await I.enterCaseReference(caseId);\n    await I.listForHearing();\n    I.waitForText('List for Hearing');",
              "err": {},
              "uuid": "15878d6a-c564-40b6-9ea1-965fe8dabf7d",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested E2E @nightly",
              "fullTitle": "Contested Events: Contested E2E @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\nconst allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\nconst listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.uploadDraftOrder();\nawait I.signOut();\nawait I.signInIdam(judgeUserName, judgePassword);\nawait I.waitForText('Judicial Case Manager');\nawait I.enterCaseReference(caseId);\nawait I.waitForText('Upload Draft Order');\nawait I.draftOrderApprove();\nawait I.signOut();\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.waitForText('Manage Cases');\nawait I.enterCaseReference(caseId);\nawait I.uploadOrder();\nawait I.sendOrder();\nlogger.info('-----------completed E2E contested test for -------------', caseId);",
              "err": {},
              "uuid": "c81ff10f-6b8e-48df-b334-9f7e75168a15",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Solicitor creates a general application with no hearing required @Johnny",
              "fullTitle": "Contested Events: Solicitor creates a general application with no hearing required @Johnny",
              "timedOut": false,
              "duration": 7785,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "logger.info(\"General application test starting\");\n// const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n// const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n// const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n// const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nI.signInIdam(solicitorUserName, solicitorPassword);\nI.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.solicitorCreateGeneralApplication();\nawait I.verifyGeneralApplicationTab();\nlogger.info(\"General application test completed\");",
              "err": {
                "message": "Error: Text \"Email address\" was not found on page after 60 sec\nProtocol error (Runtime.callFunctionOn): Session closed. Most likely the page has been closed.",
                "estack": "Text \"Email address\" was not found on page after 60 sec\nProtocol error (Runtime.callFunctionOn): Session closed. Most likely the page has been closed.\n\nScenario Steps:\n\n- I.waitForText(\"Email address\", 60) at Object.signInIdam (test/functional/steps_file.js:87:12)\n- I.wait(\"5\") at Object.signInIdam (test/functional/steps_file.js:83:12)\n- I.amOnPage(\"https://manage-case.aat.platform.hmcts.net\") at Object.signInIdam (test/functional/steps_file.js:82:13)\n\n",
                "diff": null
              },
              "uuid": "30a424fa-c7fa-4c0d-84ba-8a272d6e94d6",
              "parentUUID": "860af75b-0c61-4719-9c17-1a2cb82de93f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "30a424fa-c7fa-4c0d-84ba-8a272d6e94d6"
          ],
          "pending": [],
          "skipped": [
            "8249a389-e082-4bdb-9f2d-744eef790b06",
            "6f04af96-7b77-4b87-80ce-d046f16defd9",
            "ac3c405c-678f-4336-99c7-c4dee0b590db",
            "be9f4c57-5109-4a39-b93b-2ebbb0ac38b0",
            "2765c5af-6312-464c-adb2-bcc9c8f645ba",
            "222c73f0-914f-48d2-b672-e673349fee59",
            "7c182a7e-682a-42a1-8f4f-be8a0c7f106d",
            "26fa8e24-3e46-49f9-ba55-00f1227e92e8",
            "15878d6a-c564-40b6-9ea1-965fe8dabf7d",
            "c81ff10f-6b8e-48df-b334-9f7e75168a15"
          ],
          "duration": 7785,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "135cfe92-6801-4bc1-a8a4-b28d524d56c1",
          "title": "Contested Schedule 1",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_schedule1_test.js",
          "file": "/test/functional/contested_schedule1_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Contested Schedule 1 \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "4f87edd2-e0e2-42b4-a280-3f2516b5f6f1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Contested Schedule 1 \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "6ffc0269-b57e-4bce-9dbb-3f812879d08f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Contested Schedule 1 \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "6ffb9d7e-44e6-4fc0-96b0-d7b325d2ba1c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Contested Schedule 1 \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "0816ea82-aac2-4942-a32b-0a92a964dd3a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Contested Schedule 1 Case Creation by Solicitor @nightly",
              "fullTitle": "Contested Schedule 1: Contested Schedule 1 Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(solicitorUserName, solicitorPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedSolicitorCreate(solRef, 'Schedule1');\nawait I.contestedApplicantDetails();\nawait I.childrenDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplicationForSchedule1();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Schedule1');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "e86e1dc6-2e2e-42d8-b488-d52495df8d3f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Schedule 1 Case Creation by caseworker @nightly",
              "fullTitle": "Contested Schedule 1: Contested Schedule 1 Case Creation by caseworker @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedCaseworkerCreate(caRef, 'Schedule1', true);\nawait I.contestedApplicantDetails();\nawait I.childrenDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplicationForSchedule1();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Schedule1');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "d56307ff-55f4-45fb-a5da-fb558892e957",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Schedule 1 Case Creation by Solicitor using API call @nightly",
              "fullTitle": "Contested Schedule 1: Contested Schedule 1 Case Creation by Solicitor using API call @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//The json file used to create case is new case data - this can be used to create a case via solicitor, case type schedule 1.\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-schedule1-solicitor-create-case.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nawait I.signInIdam(solicitorUserName, solicitorPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nawait I.schedule1Tab(verifyTabText.Schedule1Tab.tabName);\nlogger.info('Schedule 1 tab verified...')",
              "err": {},
              "uuid": "8c582946-b051-4784-a3b8-99934e11b1bd",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "e86e1dc6-2e2e-42d8-b488-d52495df8d3f",
            "d56307ff-55f4-45fb-a5da-fb558892e957",
            "8c582946-b051-4784-a3b8-99934e11b1bd"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "db77343b-6642-4d0a-8fb7-0e8d50fa00a0",
          "title": "create Contested case ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_test.js",
          "file": "/test/functional/contested_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "create Contested case  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "82b78462-7b3f-4102-a06a-89e43b0a667d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "create Contested case  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "48dfdeb3-40fa-4b85-99ca-8b36ef5e344f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "create Contested case  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "d295d7d4-195f-4f93-ad16-659780cd6925",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "create Contested case  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "bfca9750-77db-48ed-807e-095a6fb1cc8e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Contested Case Creation For Caseworker @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Caseworker @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.hwfPaymentAcceptedEvent, verifyTabText.historyTab.hwfPaymentAcceptedEndState);\n  }\n}",
              "err": {},
              "uuid": "1373a7b5-587b-4ed4-b6be-7b53a78a66a3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Creation For Judge @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.assignToJudgeEvent, verifyTabText.historyTab.assignToJudgeEndState);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  }\n}",
              "err": {},
              "uuid": "f94b8557-911c-48e4-9e10-ea7baa6d9db4",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Creation For Ready For Hearing @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Ready For Hearing @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\nconst allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\nconst listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\nconst submitUploadCaseFiles = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_submitUploadedCaseFiles', './test/data/ccd-contested-list-for-hearing.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.submitUploadCaseFilesEvent, verifyTabText.historyTab.submitUploadCaseFilesEndState);\n  I.schedulingAndListingTab(verifyTabText.caseType, verifyTabText.schedulingAndListingTab.tabName);\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n}",
              "err": {},
              "uuid": "909dc46c-7f68-46b5-b20d-0ddc737a4c4a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Approved and Send Order  @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Approved and Send Order  @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\nconst allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\nconst listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\nconst submitUploadCaseFiles = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_submitUploadedCaseFiles', './test/data/ccd-contested-list-for-hearing.json');\nconst solicitorDraftDirectionOrder = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_solicitorDraftDirectionOrder', './test/data/ccd-contested-solicitor-draft-direction-order.json');\nconst draftOrderApproved = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_draftOrderApproved', './test/data/ccd-contested-judge-approved.json');\nconst uploadOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_directionOrder', './test/data/ccd-contested-caseworker-upload-order.json');\nconst sendOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_sendOrder', './test/data/ccd-caseworker-send-order.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.sendOrderEvent, verifyTabText.historyTab.sendOrderState);\n  I.wait(2);\n  I.click({css: '.mat-tab-header-pagination-after'});\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  I.contestedOrderTab(verifyTabText.caseType, verifyTabText.OrdersTab.tabName);\n}",
              "err": {},
              "uuid": "321887b0-e80b-479d-99ef-7ccd09516366",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consented case in Contested @nightly @pipeline",
              "fullTitle": "create Contested case : Consented case in Contested @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-demo-contested-to-consented.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-contested-to-consented.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.consentOrderEvent, verifyTabText.historyTab.consentOrderEndState);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n    I.consentOrderProcessTab(verifyTabText.caseType, verifyTabText.consentOrderProcessTab.tabName);\n  }\n}",
              "err": {},
              "uuid": "ba5e892f-a516-4e36-a7db-a059ad53d4c1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consented case in Contested Assigned to Judge @nightly @pipeline",
              "fullTitle": "create Contested case : Consented case in Contested Assigned to Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-contested-to-consented.json');\nconst contestAssignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_assignToJudgeConsent', './test/data/ccd-contested-to-consented.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.assignToJudgeConsentEvent, verifyTabText.historyTab.assignToJudgeConsentEndState);\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  I.consentOrderProcessTab(verifyTabText.caseType, verifyTabText.consentOrderProcessTab.tabName);\n}",
              "err": {},
              "uuid": "5dfb9e2c-4869-4b3f-9f15-6e9ea1869406",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Paper Case Creation @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Paper Case Creation @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(caseWorkerUserName, caseWorkerPassword, './test/data/ccd-demo-contested-paper-case-basic-data.json', 'FinancialRemedyContested', 'FR_newPaperCase');\n  /* eslint-disable */\n  const manualPayment = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_manualPayment', './test/data/ccd-demo-contested-paper-case-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(caseWorkerUserName, caseWorkerPassword, './test/data/ccd-contested-paper-case-basic-data.json', 'FinancialRemedyContested', 'FR_newPaperCase');\n  const manualPayment = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_manualPayment', './test/data/ccd-contested-paper-case-basic-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedPaperTabData(verifyContestedPaperTabText.caseType, verifyContestedPaperTabText.historyTab.manualPaymentEvent, verifyContestedPaperTabText.historyTab.manualPaymentEndState);\n  }\n}",
              "err": {},
              "uuid": "d23d1166-9598-4a1b-bcd6-c5d2b5488a72",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested share case @nightly @pipeline",
              "fullTitle": "create Contested case : Contested share case @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  /* eslint-disable */\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json',solRef);\n/* eslint-enable */\n  I.signInIdam(solicitorUserName, solicitorPassword);\n  I.assignContestedShareCase(caseId, solRef);\n}",
              "err": {},
              "uuid": "e97a183e-4397-4d08-ab79-72e5c5fa341d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Matrimonial Case Creation by Solicitor @nightly",
              "fullTitle": "create Contested case : Contested Matrimonial Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(solicitorUserName, solicitorPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedSolicitorCreate(solRef, 'Matrimonial');\nawait I.contestedDivorceDetails();\nawait I.contestedApplicantDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplication();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Matrimonial');\nI.waitForText('Form A Application', '60');",
              "err": {},
              "uuid": "b7c14e2d-0a55-48ff-9898-3e0a7d753bbd",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Matrimonial Case Creation by Caseworker @nightly",
              "fullTitle": "create Contested case : Contested Matrimonial Case Creation by Caseworker @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.wait('2');\n  await I.createCase('FinancialRemedyContested', 'Form A Application');\n  await I.contestedCaseworkerCreate(caRef, 'Matrimonial', true);\n  await I.contestedDivorceDetails();\n  await I.contestedApplicantDetails();\n  await I.contestedRespondentDetails();\n  await I.contestedNatureOfApplication();\n  await I.fastTrack();\n  await I.complexityList();\n  await I.applyingToCourt();\n  await I.mediationQuestion();\n  await I.miamCertification();\n  await I.contestedOtherDocuments();\n  await I.contestedCheckYourAnswers('Matrimonial');\n  I.waitForText('Form A Application', '60');\n  await I.manualPayment();\n  await I.issueApplication();\n}",
              "err": {},
              "uuid": "fc5066c3-6c19-4dd1-b387-e3c2cf094da5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "1373a7b5-587b-4ed4-b6be-7b53a78a66a3",
            "f94b8557-911c-48e4-9e10-ea7baa6d9db4",
            "909dc46c-7f68-46b5-b20d-0ddc737a4c4a",
            "321887b0-e80b-479d-99ef-7ccd09516366",
            "ba5e892f-a516-4e36-a7db-a059ad53d4c1",
            "5dfb9e2c-4869-4b3f-9f15-6e9ea1869406",
            "d23d1166-9598-4a1b-bcd6-c5d2b5488a72",
            "e97a183e-4397-4d08-ab79-72e5c5fa341d",
            "b7c14e2d-0a55-48ff-9898-3e0a7d753bbd",
            "fc5066c3-6c19-4dd1-b387-e3c2cf094da5"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "2a4f1195-3976-4885-96e4-27e3a92b8cc0",
          "title": "Create Cases for Respondent Journey ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested-respondent_test.js",
          "file": "/test/functional/contested-respondent_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Create Cases for Respondent Journey  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "adb7ec46-593e-42aa-b543-98fabc3d1233",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Create Cases for Respondent Journey  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "36693e94-226b-4fa2-b15a-40597e42b724",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Create Cases for Respondent Journey  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "e662a00f-82ba-4a9e-93e1-def796822bde",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Create Cases for Respondent Journey  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "b4ee379c-c9ee-4e76-8244-d07ea08db463",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create and assign Contested Case To Respondent @pipeline @nightly",
              "fullTitle": "Create Cases for Respondent Journey : Create and assign Contested Case To Respondent @pipeline @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  I.signInXuiOrg(caaUsername, caaPassword);\n  I.assignContestedCase(caseId, respondentEmail);\n} else {\n  if (nightlyTest === 'true') {\n    const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    I.signInXuiOrg(caaUsername, caaPassword);\n    I.assignContestedCase(caseId, respondentEmail);\n  }\n}",
              "err": {},
              "uuid": "1a968003-5f1a-45bd-99f3-767b99e4f3f1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "1a968003-5f1a-45bd-99f3-767b99e4f3f1"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "3df41ddd-992b-4178-b08d-9b982f5d2240",
          "title": "Manage Interveners",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/interveners_test.js",
          "file": "/test/functional/interveners_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Manage Interveners \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "4fc25160-1188-449a-84cc-961bb9f5dc36",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Manage Interveners \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "9673c708-37ad-4e0c-b76e-5f37e6c8acec",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Manage Interveners \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "9f68d2e7-08a7-437c-b15e-6a14ca9a287f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Manage Interveners \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "b62b3d6d-c4d4-442e-96ac-c3b2da3e88dd",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Add Interveners @nightly",
              "fullTitle": "Manage Interveners: Add Interveners @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nawait I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nawait I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\nI.wait('5');\nawait I.manageInterveners();\nlogger.info('Manage Interveners event completed');\nawait I.contestedIntervenersTab(verifyTabText.historyTab.manageIntervenersEvent, verifyTabText.IntervenersTab);\nlogger.info('Interveners tab verified');",
              "err": {},
              "uuid": "a8e5fa80-5c9f-4af3-b7e8-520bdbabfabc",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "a8e5fa80-5c9f-4af3-b7e8-520bdbabfabc"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "./functional-output/xui",
        "reportName": "FinRemTests",
        "inlineAssets": true
      },
      "version": "5.1.0"
    }
  }
}