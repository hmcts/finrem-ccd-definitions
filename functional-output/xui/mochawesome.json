{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-04-04T08:44:53.790Z",
    "end": "2023-04-04T08:44:56.448Z",
    "duration": 2658,
    "testsRegistered": 23,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 22,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "32b6114e-848e-48e2-b346-e757d21bef54",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a33481b9-246b-49e5-88d8-0c31380c0b83",
          "title": "Admin Web",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/admin_test.js",
          "file": "/test/functional/admin_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Admin Web \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "3ee23113-4faf-4765-9ecd-6c350b09b5ae",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Admin Web \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "dddf21f9-f089-417e-a103-dd28189edaf1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Admin Web \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "f98ccd2c-97c1-498c-8be8-e5cf4a8260c6",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Admin Web \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "295536b5-6e14-4864-a37f-7131aa8e8bf9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "add all the roles @pipeline",
              "fullTitle": "Admin Web: add all the roles @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.loginToAdminConsole();\nI.createRole('citizen');\nI.createRole('caseworker');\nI.createRole('caseworker-divorce-financialremedy-courtadmin');\nI.createRole('caseworker-divorce-financialremedy-solicitor');\nI.createRole('caseworker-divorce-financialremedy-judiciary');\nI.createRole('caseworker-divorce-systemupdate');\nI.createRole('caseworker-divorce-bulkscan');\nI.createRole('caseworker-divorce-financialremedy');\nI.createRole('caseworker-caa');\nI.createRole('caseworker-divorce-financialremedy-superuser');\nI.createRole('caseworker-approver');\nI.click('Manage User Roles');\nI.see('citizen');\nI.see('caseworker');\nI.see('caseworker-divorce-financialremedy-courtadmin');\nI.see('caseworker-divorce-financialremedy-solicitor');\nI.see('caseworker-divorce-financialremedy-judiciary');\nI.see('caseworker-divorce-systemupdate');\nI.see('caseworker-divorce-bulkscan');\nI.see('caseworker-divorce-financialremedy');\nI.see('caseworker-caa');\nI.see('caseworker-divorce-financialremedy-superuser')\nI.see('caseworker-approver');",
              "err": {},
              "uuid": "d432fafd-326f-4b19-8024-0e1319a0ef3c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "d432fafd-326f-4b19-8024-0e1319a0ef3c"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "e8bb12e8-97f1-4f45-8a28-3c8ece1f665b",
          "title": "create Consented case ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/consented_test.js",
          "file": "/test/functional/consented_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "create Consented case  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "0725ac1e-25ae-4159-be5b-94062c7a20e0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "create Consented case  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "fefc283c-369b-430d-8e3f-a8cfc88117e4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "create Consented case  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "1133eed1-663a-4c08-904b-a5ae3eb42fa2",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "create Consented case  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "69e9dd08-8857-4070-ad2d-656d6def034d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Consent Case Creation For Caseworker @nightly @pipeline",
              "fullTitle": "create Consented case : Consent Case Creation For Caseworker @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-demo-consented-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\n  /* eslint-disable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.hwfPaymentAcceptedEvent, verifyTabText.historyTab.hwfPaymentAcceptedEndState);\n    I.paymentDetailsTab(verifyTabText.caseType, verifyTabText.paymentDetailsTab.tabName);\n    I.judgeDetailsTab(verifyTabText.caseType, verifyTabText.judgeDetailsTab.tabName, verifyTabText.historyTab.hwfPaymentAcceptedEvent);\n  }\n}",
              "err": {},
              "uuid": "12007f21-5ccb-4a84-8aa5-e3afe52f341d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case Creation For Judge @nightly @pipeline",
              "fullTitle": "create Consented case : Consent Case Creation For Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-demo-consented-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.issueApplicationEvent, verifyTabText.historyTab.issueApplicationEndState);\n    I.paymentDetailsTab(verifyTabText.caseType, verifyTabText.paymentDetailsTab.tabName);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  }\n}",
              "err": {},
              "uuid": "16c002f7-f25b-41ba-8a82-64687cffc65c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case approve and send order  @nightly @pipeline ",
              "fullTitle": "create Consented case : Consent Case approve and send order  @nightly @pipeline ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-consented-basic-data.json', 'FinancialRemedyMVP2', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyMVP2', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-consented-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_HWFDecisionMade', './test/data/ccd-consented-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_issueApplication', './test/data/ccd-consented-case-worker-issue-data.json');\nconst approveOrder = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyMVP2', 'FR_approveApplication', './test/data/ccd-consented-judge-approve-data.json');\nconst sendOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyMVP2', 'FR_sendOrderForApproved', './test/data/ccd-caseworker-send-order.json');\n\n  /* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyConsentedTabData(verifyTabText.caseType, verifyTabText.historyTab.sendOrderEvent, verifyTabText.historyTab.approveSendOrderEndState);\n  I.approvedOrderTab(verifyTabText.caseType, verifyTabText.approvedOrderTab.tabName);\n  }",
              "err": {},
              "uuid": "36456823-0ca5-4cac-a887-7db54fe111a5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consent Case Creation by Solicitor @crossbrowser @nightly ",
              "fullTitle": "create Consented case : Consent Case Creation by Solicitor @crossbrowser @nightly ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  I.signInIdam(solicitorUserName, solicitorPassword);\n  I.wait('2');\n  await I.createCase('Financial Remedy Consented', 'Consent Order Application');\n  await I.solicitorCreate(solRef);\n  await I.divorceDetails();\n  await I.applicantDetails();\n  await I.consentedRespondentDetails();\n  await I.natureOfApplication();\n  await I.consentOrder();\n  await I.d81Question();\n  await I.optionalDocuments();\n  await I.consentedOtherDocuments();\n  await I.savingApplicationInformation('consented');\n  await I.checkYourAnswers();\n  // amend event\n  I.amendApplicationDetails();\n  // hwf payment submission\n  await I.caseSubmitAuthorisation('consented');\n  await I.paymentPage(false);\n  await I.hwfPaymentDetails();\n  await I.paymentSubmission();\n  await I.savingApplicationInformation('consented');\n  await I.finalPaymentSubmissionPage();\n  await I.finalInformationPage();\n  I.waitForText('History', '30');\n}",
              "err": {},
              "uuid": "22d70668-e264-4f69-be99-b8b8ed5f043f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "12007f21-5ccb-4a84-8aa5-e3afe52f341d",
            "16c002f7-f25b-41ba-8a82-64687cffc65c",
            "36456823-0ca5-4cac-a887-7db54fe111a5",
            "22d70668-e264-4f69-be99-b8b8ed5f043f"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
          "title": "create Contested case ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested_test.js",
          "file": "/test/functional/contested_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "create Contested case  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "dd492ac5-9910-41fa-a289-9be4b1b32593",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "create Contested case  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 1137,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "2868c762-9778-4e87-8540-19d85f3fd0f5",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "create Contested case  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "35ee5f04-240f-484a-8dda-3c864cbc9619",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "create Contested case  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "adfc9beb-0208-412c-a553-27bdb7ade181",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Contested Case Creation For Caseworker @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Caseworker @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.hwfPaymentAcceptedEvent, verifyTabText.historyTab.hwfPaymentAcceptedEndState);\n  }\n}",
              "err": {},
              "uuid": "7426c966-e7db-4c01-9aef-62d45f194173",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Creation For Judge @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// if (runningEnv === 'demo') {\n//   const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n//   /* eslint-disable */\n//   const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n//   const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n//   const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n//   const assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\n// } else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.assignToJudgeEvent, verifyTabText.historyTab.assignToJudgeEndState);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n // }\n}",
              "err": {},
              "uuid": "84fcd17e-ac03-4b60-8b84-a0cdf92deb7c",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Creation For Ready For Hearing @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Creation For Ready For Hearing @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\nconst allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\nconst listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\nconst submitUploadCaseFiles = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_submitUploadedCaseFiles', './test/data/ccd-contested-list-for-hearing.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.submitUploadCaseFilesEvent, verifyTabText.historyTab.submitUploadCaseFilesEndState);\n  I.schedulingAndListingTab(verifyTabText.caseType, verifyTabText.schedulingAndListingTab.tabName);\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n}",
              "err": {},
              "uuid": "04dce001-9138-4b50-b624-d3012e563fd1",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Case Approved and Send Order  @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Case Approved and Send Order  @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst assignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_allocateToJudge', './test/data/ccd-contested-case-worker-issue-data.json');\nconst allocationDirections = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_giveAllocationDirections', './test/data/ccd-contested-allocation-directions.json');\nconst listForHearing = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_addSchedulingListingInfo', './test/data/ccd-contested-list-for-hearing.json');\nconst submitUploadCaseFiles = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_submitUploadedCaseFiles', './test/data/ccd-contested-list-for-hearing.json');\nconst solicitorDraftDirectionOrder = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_solicitorDraftDirectionOrder', './test/data/ccd-contested-solicitor-draft-direction-order.json');\nconst draftOrderApproved = await updateCaseInCcd(judgeUserName, judgePassword, caseId, 'FinancialRemedyContested', 'FR_draftOrderApproved', './test/data/ccd-contested-judge-approved.json');\nconst uploadOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_directionOrder', './test/data/ccd-contested-caseworker-upload-order.json');\nconst sendOrder = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_sendOrder', './test/data/ccd-caseworker-send-order.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.sendOrderEvent, verifyTabText.historyTab.sendOrderState);\n  I.wait(2);\n  I.click({css: '.mat-tab-header-pagination-after'});\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  I.contestedOrderTab(verifyTabText.caseType, verifyTabText.OrdersTab.tabName);\n}",
              "err": {},
              "uuid": "e7186d6c-a834-408b-856c-8b06b168b834",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consented case in Contested @nightly @pipeline",
              "fullTitle": "create Contested case : Consented case in Contested @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-demo-contested-to-consented.json');\n} else {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  const contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-contested-to-consented.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.consentOrderEvent, verifyTabText.historyTab.consentOrderEndState);\n    I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n    I.consentOrderProcessTab(verifyTabText.caseType, verifyTabText.consentOrderProcessTab.tabName);\n  }\n}",
              "err": {},
              "uuid": "fa480148-af8b-40be-adde-c6cef4366a4f",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Consented case in Contested Assigned to Judge @nightly @pipeline",
              "fullTitle": "create Contested case : Consented case in Contested Assigned to Judge @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n/* eslint-disable */\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\nconst issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\nconst contestToConsent = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_consentOrder', './test/data/ccd-contested-to-consented.json');\nconst contestAssignToJudge = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_assignToJudgeConsent', './test/data/ccd-contested-to-consented.json');\n/* eslint-enable */\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n  // eslint-disable-next-line max-len\n  I.verifyContestedTabData(verifyTabText.caseType, verifyTabText.historyTab.assignToJudgeConsentEvent, verifyTabText.historyTab.assignToJudgeConsentEndState);\n  I.adminNotesTab(verifyTabText.caseType, verifyTabText.adminNotesTab.tabName);\n  I.consentOrderProcessTab(verifyTabText.caseType, verifyTabText.consentOrderProcessTab.tabName);\n}",
              "err": {},
              "uuid": "1498ceb8-8512-49e8-8346-0bd5c4ab55f2",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Paper Case Creation @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Paper Case Creation @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(caseWorkerUserName, caseWorkerPassword, './test/data/ccd-demo-contested-paper-case-basic-data.json', 'FinancialRemedyContested', 'FR_newPaperCase');\n  /* eslint-disable */\n  const manualPayment = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_manualPayment', './test/data/ccd-demo-contested-paper-case-basic-data.json');\n} else {\n  const caseId = await createCaseInCcd(caseWorkerUserName, caseWorkerPassword, './test/data/ccd-contested-paper-case-basic-data.json', 'FinancialRemedyContested', 'FR_newPaperCase');\n  const manualPayment = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_manualPayment', './test/data/ccd-contested-paper-case-basic-data.json');\n  /* eslint-enable */\n  if (nightlyTest === 'true') {\n    I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n    I.amOnPage(`${ccdWebUrl}/v2/case/${caseId}`);\n    // eslint-disable-next-line max-len\n    I.verifyContestedPaperTabData(verifyContestedPaperTabText.caseType, verifyContestedPaperTabText.historyTab.manualPaymentEvent, verifyContestedPaperTabText.historyTab.manualPaymentEndState);\n  }\n}",
              "err": {},
              "uuid": "16ce6fb6-ab19-4473-8507-5a1e82385ffe",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested share case @nightly @pipeline",
              "fullTitle": "create Contested case : Contested share case @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  /* eslint-disable */\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\nconst hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json',solRef);\n/* eslint-enable */\n  I.signInIdam(solicitorUserName, solicitorPassword);\n  I.assignContestedShareCase(caseId, solRef);\n}",
              "err": {},
              "uuid": "c1a85f15-3baf-476c-ac36-e22eaaa72cba",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Matrimonial Case Creation by Solicitor @nightly",
              "fullTitle": "create Contested case : Contested Matrimonial Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(solicitorUserName, solicitorPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedSolicitorCreate(solRef, 'Matrimonial');\nawait I.contestedDivorceDetails();\nawait I.contestedApplicantDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplication();\nawait I.contestedOrderForChildren();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Matrimonial');\nI.waitForText('Form A Application', '60')\n\n  //amend application\nI.contestedAmendApplicationDetails();\nawait I.caseSubmitAuthorisation('contested');\nawait I.paymentPage(false);\nawait I.hwfPaymentDetails();\nawait I.paymentSubmission();\nawait I.savingApplicationInformation('contested');\nawait I.finalPaymentSubmissionPage();\nawait I.finalInformationPage();\nI.see('Case Submission');",
              "err": {},
              "uuid": "033e6a99-9a48-4c38-b14e-211b498f3839",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Schedule 1 Case Creation by Solicitor @nightly",
              "fullTitle": "create Contested case : Contested Schedule 1 Case Creation by Solicitor @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(solicitorUserName, solicitorPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedSolicitorCreate(solRef, 'Schedule1');\nawait I.contestedApplicantDetails();\nawait I.childrenDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplicationForSchedule1();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Schedule1');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "4e293a81-81bf-4520-90bb-16ad3927c8f4",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Matrimonial Case Creation by Caseworker @nightly @pipeline",
              "fullTitle": "create Contested case : Contested Matrimonial Case Creation by Caseworker @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.wait('2');\n  await I.createCase('FinancialRemedyContested', 'Form A Application');\n  await I.contestedCaseworkerCreate(caRef, 'Matrimonial', true);\n  await I.contestedDivorceDetails();\n  await I.contestedApplicantDetails();\n  await I.contestedRespondentDetails();\n  await I.contestedNatureOfApplication();\n  await I.contestedOrderForChildren();\n  await I.fastTrack();\n  await I.complexityList();\n  await I.applyingToCourt();\n  await I.mediationQuestion();\n  await I.miamCertification();\n  await I.contestedOtherDocuments();\n  await I.contestedCheckYourAnswers('Matrimonial');\n  I.waitForText('Form A Application', '60');\n  await I.manualPayment();\n  await I.issueApplication();\n}",
              "err": {},
              "uuid": "aa823344-edc4-4352-b4de-f012c373fde2",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Upload Case Files Confidential Documents @nightly @pipeline",
              "fullTitle": "create Contested case : Upload Case Files Confidential Documents @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//login as a caseworker, create contested case\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.wait('2');\n  await I.createCase('FinancialRemedyContested', 'Form A Application');\n  await I.contestedCaseworkerCreate(caRef, 'Matrimonial', true);\n  await I.contestedDivorceDetails();\n  await I.contestedApplicantDetails();\n  await I.contestedRespondentDetails();\n  await I.contestedNatureOfApplication();\n  await I.contestedOrderForChildren();\n  await I.fastTrack();\n  await I.complexityList();\n  await I.applyingToCourt();\n  await I.mediationQuestion();\n  await I.miamCertification();\n  await I.contestedOtherDocuments();\n  await I.contestedCheckYourAnswers('Matrimonial');\n  I.waitForText('Form A Application', '60');\n  await I.manualPayment();\n  await I.issueApplication();\n  await I.uploadCaseFiles();\n  await I.verifyContestedConfidentialTabData(verifyTabText.historyTab.uploadCaseFiles, verifyTabText.confidentialDocumentsTab);\n  logger.info('Confidential documents verified on Confidential documents tab');\n}",
              "err": {},
              "uuid": "eaa8832c-b5f4-4f72-ac10-4f6fe8d894c7",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Manage Confidential Documents @nightly @pipeline",
              "fullTitle": "create Contested case : Manage Confidential Documents @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  //login as a caseworker, create contested case\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.wait('2');\n  await I.createCase('FinancialRemedyContested', 'Form A Application');\n  await I.contestedCaseworkerCreate(caRef, 'Matrimonial', true);\n  await I.contestedDivorceDetails();\n  await I.contestedApplicantDetails();\n  await I.contestedRespondentDetails();\n  await I.contestedNatureOfApplication();\n  await I.contestedOrderForChildren();\n  await I.fastTrack();\n  await I.complexityList();\n  await I.applyingToCourt();\n  await I.mediationQuestion();\n  await I.miamCertification();\n  await I.contestedOtherDocuments();\n  await I.contestedCheckYourAnswers('Matrimonial');\n  I.waitForText('Form A Application', '60');\n  await I.manualPayment();\n  await I.issueApplication();\n  await I.manageConfidentialDocuments();\n  logger.info('Manage confidential documents event completed');\n  await I.verifyContestedConfidentialTabData(verifyTabText.historyTab.manageConfidentialDocuments, verifyTabText.confidentialDocumentsTab);\n  logger.info('Confidential documents verified on Confidential documents tab');\n}",
              "err": {},
              "uuid": "aeb5deaa-d1b5-4712-81c3-e2df45f58520",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "progress to listing for contested case @nightly @pipeline",
              "fullTitle": "create Contested case : progress to listing for contested case @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (nightlyTest === 'true') {\n  //login as a caseworker, create contested case\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  await I.waitForText('Manage Cases');\n  await I.createCase('FinancialRemedyContested', 'Form A Application');\n  await I.contestedCaseworkerCreate(caRef, 'Matrimonial', true);\n  await I.contestedDivorceDetails();\n  await I.contestedApplicantDetails();\n  await I.contestedRespondentDetails();\n  await I.contestedNatureOfApplication();\n await I.contestedOrderForChildren();\n  await I.fastTrack();\n  await I.complexityList();\n  await I.applyingToCourt();\n  await I.mediationQuestion();\n  await I.miamCertification();\n  await I.contestedOtherDocuments();\n  await I.contestedCheckYourAnswers('Matrimonial');\n  I.waitForText('Form A Application', '60');\n  await I.manualPayment();\n await I.issueApplication();\n  caseRef= await I.getCaseRefFromScreen();\n  caseRef = caseRef.replace(/\\D/gi, '');\n  logger.info('---------------------case number------------------------', caseRef);\n  logger.info('--------------case worker created case ' +caseRef+ ' successfully-----------------');\n  await I.allocateJudge();\n  await I.see('Allocate to Judge');\n  await I.signOut();\n  await I.signInIdam(judgeUserName, judgePassword);\n  await I.waitForText('Judicial Case Manager');\n  await I.enterCaseReference(caseRef);\n  await I.see('Gate Keeping And Allocation');\n  await I.giveAllocationDirection();\n  await I.signOut();\n  await I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  await I.waitForText('Manage Cases');\n  await I.enterCaseReference(caseRef);\n  await I.listForHearing();\n   I.waitForText('List for Hearing');\n}",
              "err": {},
              "uuid": "09ad9010-5f92-4387-9ef6-02125783be06",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contested Schedule 1 Case Creation by caseworker @nightly",
              "fullTitle": "create Contested case : Contested Schedule 1 Case Creation by caseworker @nightly",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.signInIdam(caseWorkerUserName, caseWorkerPassword);\nI.wait('2');\nawait I.createCase('FinancialRemedyContested', 'Form A Application');\nawait I.contestedCaseworkerCreate(caRef, 'Schedule1', true);\nawait I.contestedApplicantDetails();\nawait I.childrenDetails();\nawait I.contestedRespondentDetails();\nawait I.contestedNatureOfApplicationForSchedule1();\nawait I.fastTrack();\nawait I.complexityList();\nawait I.applyingToCourt();\nawait I.mediationQuestion();\nawait I.miamCertification();\nawait I.contestedOtherDocuments();\nawait I.contestedCheckYourAnswers('Schedule1');\nI.waitForText('Form A Application', '60')",
              "err": {},
              "uuid": "3074a7ea-1150-40e1-9f1e-cf9f63a8e74c",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Update Contact Details for contested Case @nightly @pipeline",
              "fullTitle": "create Contested case : Update Contact Details for contested Case @nightly @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//caseworker, type-matrimonial\nif (nightlyTest === 'true') {\n  I.signInIdam(caseWorkerUserName, caseWorkerPassword);\n  I.wait('2');\n  await I.createCase('FinancialRemedyContested', 'Form A Application');\n  await I.contestedCaseworkerCreate(caRef, 'Matrimonial', true);\n  await I.contestedDivorceDetails();\n  await I.contestedApplicantDetails();\n  await I.contestedRespondentDetails();\n  await I.contestedNatureOfApplication();\n  await I.contestedOrderForChildren();\n  await I.fastTrack();\n  await I.complexityList();\n  await I.applyingToCourt();\n  await I.mediationQuestion();\n  await I.miamCertification();\n  await I.contestedOtherDocuments();\n  await I.contestedCheckYourAnswers('Matrimonial');\n  I.waitForText('Form A Application');\n  await I.manualPayment();\n  await I.issueApplication();\n  await I.updateContactDetails();\n}",
              "err": {},
              "uuid": "4c77cbb0-8ae9-4169-8241-67cfc54a8928",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Caseworker refunds an issued case @Johnny",
              "fullTitle": "create Contested case : Caseworker refunds an issued case @Johnny",
              "timedOut": false,
              "duration": 1495,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"Johnny's test starting\");\n//Using API to create a case as a solicitor\nconst caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\nconsole.log(\"Case created with ID\" + caseId)\n\nconst caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n\nI.signInIdam(caseWorkerUserName, caseWorkerPassword);",
              "err": {
                "message": "SyntaxError: Unexpected token u in JSON at position 0",
                "estack": "Unexpected token u in JSON at position 0",
                "diff": null
              },
              "uuid": "cc8a956f-7c69-49a4-8b45-4d7df629d530",
              "parentUUID": "b72b41ac-56fa-44ae-bc68-1873d6f5a55f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cc8a956f-7c69-49a4-8b45-4d7df629d530"
          ],
          "pending": [],
          "skipped": [
            "7426c966-e7db-4c01-9aef-62d45f194173",
            "84fcd17e-ac03-4b60-8b84-a0cdf92deb7c",
            "04dce001-9138-4b50-b624-d3012e563fd1",
            "e7186d6c-a834-408b-856c-8b06b168b834",
            "fa480148-af8b-40be-adde-c6cef4366a4f",
            "1498ceb8-8512-49e8-8346-0bd5c4ab55f2",
            "16ce6fb6-ab19-4473-8507-5a1e82385ffe",
            "c1a85f15-3baf-476c-ac36-e22eaaa72cba",
            "033e6a99-9a48-4c38-b14e-211b498f3839",
            "4e293a81-81bf-4520-90bb-16ad3927c8f4",
            "aa823344-edc4-4352-b4de-f012c373fde2",
            "eaa8832c-b5f4-4f72-ac10-4f6fe8d894c7",
            "aeb5deaa-d1b5-4712-81c3-e2df45f58520",
            "09ad9010-5f92-4387-9ef6-02125783be06",
            "3074a7ea-1150-40e1-9f1e-cf9f63a8e74c",
            "4c77cbb0-8ae9-4169-8241-67cfc54a8928"
          ],
          "duration": 1495,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "fe89f9b8-bdf2-4277-bf5b-85098565cf23",
          "title": "Create Cases for Respondent Journey ",
          "fullFile": "/Users/johnnyvineall/Documents/GitHub/finrem-ccd-definitions/test/functional/contested-respondent_test.js",
          "file": "/test/functional/contested-respondent_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Create Cases for Respondent Journey  \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "ebde74f8-608c-49a8-9623-672ce8d597fc",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Create Cases for Respondent Journey  \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "01522a48-98b3-4730-8857-54abeca21e5f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Create Cases for Respondent Journey  \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "b469eb6d-1583-41e3-9690-05735896c5e5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Create Cases for Respondent Journey  \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "01daeb2d-26b9-4523-a63e-7a32af67b6c2",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create and assign Contested Case To Respondent @pipeline",
              "fullTitle": "Create Cases for Respondent Journey : Create and assign Contested Case To Respondent @pipeline",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (runningEnv === 'demo') {\n  const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-demo-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n  /* eslint-disable */\n  const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n  const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-demo-contested-basic-data.json');\n  const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n  I.signInXuiOrg(caaUsername, caaPassword);\n  I.assignContestedCase(caseId, respondentEmail);\n} else {\n  if (nightlyTest === 'true') {\n    const caseId = await createCaseInCcd(solicitorUserName, solicitorPassword, './test/data/ccd-contested-basic-data.json', 'FinancialRemedyContested', 'FR_solicitorCreate');\n    const caseSubmission = await updateCaseInCcd(solicitorUserName, solicitorPassword, caseId, 'FinancialRemedyContested', 'FR_applicationPaymentSubmission', './test/data/ccd-hwf-contested-payment.json');\n    const hwfPaymentAccepted = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_HWFDecisionMade', './test/data/ccd-contested-basic-data.json');\n    const issueApplication = await updateCaseInCcd(caseWorkerUserName, caseWorkerPassword, caseId, 'FinancialRemedyContested', 'FR_issueApplication', './test/data/ccd-contested-case-worker-issue-data.json');\n    I.signInXuiOrg(caaUsername, caaPassword);\n    I.assignContestedCase(caseId, respondentEmail);\n  }\n}",
              "err": {},
              "uuid": "cecdc1c4-6ce0-4413-9bdd-1badecb2173e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "cecdc1c4-6ce0-4413-9bdd-1badecb2173e"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "./functional-output/xui",
        "reportName": "FinRemTests",
        "inlineAssets": true
      },
      "version": "5.1.0"
    }
  }
}