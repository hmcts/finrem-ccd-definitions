import { type Page, expect, Locator } from '@playwright/test';
import { BaseJourneyPage } from "../../BaseJourneyPage";

export class ManageCaseDocumentsPage extends BaseJourneyPage {
  readonly manageCaseDocumentHeading: Locator;
  readonly makeInactiveButton: Locator;

  public constructor(page: Page) {
    super(page);
    this.manageCaseDocumentHeading = page.getByRole('heading', { name: 'Manage case documents' });  
  } 

  // Click "Add new"
  async clickAddNew() {
    await this.page.getByRole('button', { name: 'Add new' }).click();
  }

  // Upload a document
  async uploadDocument(filePath: string) {
    const uploadInput = this.page.locator('input[type="file"]');
    await uploadInput.setInputFiles(filePath);
  }

  // Select document type
  async selectDocumentType(optionText: string) {
    const dropdown = this.page.locator('select');
    await dropdown.selectOption({ label: optionText });
  }

  // Fill in description
  async fillDescription(text: string) {
    const textarea = this.page.locator('test case');
    await textarea.fill(text);
  }

  // Set confidentiality
  async setConfidentiality(isConfidential: boolean) {
    const radioLabel = isConfidential ? 'Yes' : 'No';
    await this.page.getByLabel(radioLabel).check();
  }

  // Click Continue and Submit
  async continueAndSubmit() {
    await this.page.getByRole('button', { name: 'Continue' }).click();
    await expect(this.page.locator('h1')).toContainText('Check your answers');
    await this.page.getByRole('button', { name: 'Submit' }).click();
  }
}