#!groovy

import uk.gov.hmcts.contino.AppPipelineConfig
import uk.gov.hmcts.contino.GithubAPI

@Library("Infrastructure")

String product = "finrem"
String component = "ccd-definitions"
AppPipelineConfig pipelineConf;

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

def secrets = [
        's2s-${env}'      : [
                secret('microservicekey-ccd-data', 'DATA_STORE_S2S_KEY'),
                secret('microservicekey-ccd-definition', 'DEFINITION_STORE_S2S_KEY'),
                secret('microservicekey-ccd-gw', 'API_GATEWAY_S2S_KEY'),
                secret('microservicekey-ccd-ps', 'PRINT_S2S_KEY'),
                secret('microservicekey-ccd-admin', 'ADMIN_S2S_KEY')
        ],
        'ccd-${env}'      : [
                secret('ccd-api-gateway-oauth2-client-secret', 'API_GATEWAY_IDAM_SECRET'),
                secret('ccd-admin-web-oauth2-client-secret', 'ADMIN_WEB_IDAM_SECRET'),
                secret('postcode-info-address-lookup-token', 'ADDRESS_LOOKUP_TOKEN'),
                secret('idam-data-store-client-secret','IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET'),
                secret('idam-data-store-system-user-username','IDAM_DATA_STORE_SYSTEM_USER_USERNAME'),
                secret('idam-data-store-system-user-password','IDAM_DATA_STORE_SYSTEM_USER_PASSWORD'),
                secret('AppInsightsInstrumentationKey', 'APP_INSIGHTS_INSTRUMENTATION_KEY'),
                secret('ccd-case-document-am-api-s2s-secret', 'CASE_DOCUMENT_AM_API_S2S_SECRET')
        ],
        'finrem-${env}'      : [
                secret('fixedlists-consented-judgedetails-1', 'FIXEDLISTS_CONSENTED_JUDGEDETAILS_1'),
                secret('fixedlists-consented-judgedetails-2', 'FIXEDLISTS_CONSENTED_JUDGEDETAILS_2'),
                secret('fixedlists-consented-judgedetails-3', 'FIXEDLISTS_CONSENTED_JUDGEDETAILS_3'),
                secret('fixedlists-consented-judgedetails-4', 'FIXEDLISTS_CONSENTED_JUDGEDETAILS_4'),
                secret('fixedlists-consented-judgedetails-5', 'FIXEDLISTS_CONSENTED_JUDGEDETAILS_5'),
                secret('fixedlists-consented-judgedetails-6', 'FIXEDLISTS_CONSENTED_JUDGEDETAILS_6'),
                secret('fixedlists-consented-judgedetails-7', 'FIXEDLISTS_CONSENTED_JUDGEDETAILS_7'),
                secret('fixedlists-consented-judgedetails-8', 'FIXEDLISTS_CONSENTED_JUDGEDETAILS_8'),
                secret('fixedlists-consented-judgedetails-9', 'FIXEDLISTS_CONSENTED_JUDGEDETAILS_9'),
                secret('userprofile-consented-judgedetails-1', 'USERPROFILE_CONSENTED_JUDGEDETAILS_1'),
                secret('userprofile-consented-judgedetails-2', 'USERPROFILE_CONSENTED_JUDGEDETAILS_2'),
                secret('userprofile-consented-judgedetails-3', 'USERPROFILE_CONSENTED_JUDGEDETAILS_3'),
                secret('userprofile-consented-judgedetails-4', 'USERPROFILE_CONSENTED_JUDGEDETAILS_4'),
                secret('userprofile-consented-judgedetails-5', 'USERPROFILE_CONSENTED_JUDGEDETAILS_5'),
                secret('userprofile-consented-judgedetails-6', 'USERPROFILE_CONSENTED_JUDGEDETAILS_6'),
                secret('userprofile-consented-judgedetails-7', 'USERPROFILE_CONSENTED_JUDGEDETAILS_7'),
                secret('userprofile-consented-judgedetails-8', 'USERPROFILE_CONSENTED_JUDGEDETAILS_8'),
                secret('userprofile-consented-judgedetails-9', 'USERPROFILE_CONSENTED_JUDGEDETAILS_9'),
                secret('userprofile-contested-judgedetails', 'USERPROFILE_CONTESTED_JUDGEDETAILS'),
                secret('username-solicitor', 'USERNAME_SOLICITOR'),
                secret('password-solicitor', 'PASSWORD_SOLICITOR'),
                secret('username-caseworker', 'USERNAME_CASEWORKER'),
                secret('password-caseworker', 'PASSWORD_CASEWORKER'),
                secret('fr-judge-username','USERNAME_JUDGE'),
                secret('fr-judge-password', 'PASSWORD_JUDGE'),
                secret('idam-client-secret', 'IDAM_CLIENT_SECRET'),
                secret('ccd-submission-s2s-auth-secret', 'CCD_SUBMIT_S2S_SECRET'),
                secret('ccd-admin-username', 'CCD_ADMIN_USER_NAME'),
                secret('ccd-admin-password', 'CCD_ADMIN_PASSWORD'),
                secret('finrem-doc-s2s-auth-secret', 'FINREM_DOC_GEN_SERVICE_S2S_KEY'),
                secret('docmosis-api-key', 'PDF_SERVICE_ACCESS_KEY'),
                secret('finrem-case-orchestration-service-s2s-key', 'FINREM_CASE_ORCHESTRATION_SERVICE_S2S_KEY'),
                secret('docmosis-endpoint', 'PDF_SERVICE_BASEURL'),
                secret('gov-uk-notification-key', 'UK_GOV_NOTIFY_API_KEY'),
                secret('finrem-payment-service-s2s-key', 'FINREM_PAYMENTS_SERVICE_S2S_KEY'),
                secret('idam-caa-username', 'IDAM_CAA_USERNAME'),
                secret('idam-caa-password', 'IDAM_CAA_PASSWORD'),
                secret('manage-case-s2s-key', 'MANAGE_CASE_S2S_KEY'),
                secret('idam-noc-approver-username', 'IDAM_NOC_APPROVER_USERNAME'),
                secret('idam-noc-approver-password', 'IDAM_NOC_APPROVER_PASSWORD'),
                secret('notify-mca-api-key', 'NOTIFY_MCA_API_KEY'),
                secret('finrem-system-update-username', 'FINREM_SYSTEMUPDATE_USERNAME'),
                secret('finrem-system-update-password', 'FINREM_SYSTEMUPDATE_PASSWORD'),
                secret('idam-mca-client-secret', 'IDAM_MCA_CLIENT_SECRET'),
                secret('finrem-idam-client-secret', 'FINREM_IDAM_CLIENT_SECRET'),
                secret('solicitor1-username', 'USERNAME_SOLICITOR1'),
                secret('solicitor1-password', 'PASSWORD_SOLICITOR1'),
                secret('barrister1-username', 'USERNAME_BARRISTER1'),
                secret('barrister1-password', 'PASSWORD_BARRISTER1'),
                secret('finrem-idam-client-secret', 'FINREM_IDAM_CLIENT_SECRET'),
                secret('username-caa', 'USERNAME_CAA'),
                secret('password-caa', 'PASSWORD_CAA'),
                secret('username-respondent-solicitor', 'USERNAME_RESPONDENT_SOLICITOR')

        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

// Configure branches to sync with master branch
def branchesToSync = ['demo', 'ithc', 'perftest']
properties([
    copyArtifactPermission('*'),
]);
withPipeline("nodejs", product, component) {

  loadVaultSecrets(secrets)
  enableHighLevelDataSetup()
  syncBranchesWithMaster(branchesToSync)
  pipelineConf = config
  afterSuccess('test') {
    // enable yarn audit and send message on master branch only
    try {
      yarnBuilder.yarn('npm audit')
    } catch (error) {
      onMaster {
        slackSend(channel: '#finrem-dev', color: 'warning', message: "Yarn Audit has detected vulnerabilities in ${env.JOB_NAME}. You can check if there are patches for them in the full report, build details here: <${env.RUN_DISPLAY_URL}|Build ${env.BUILD_DISPLAY_NAME}>.")
      }
    }
  }
  before('highleveldatasetup') {
    echo "CCD definition upload for environment: ${env.ENV}"
    env.RUNNING_ENV = env.ENV;
    yarnBuilder.yarn('setup')
    if('preview' == env.ENV) {
      env.RUNNING_ENV = "aat"
      env.COS_API_URL = "http://finrem-ccd-definitions-pr-${CHANGE_ID}-finrem-cos"
      env.AAC_API_URL = "https://aac-finrem-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
      env.CCD_DATA_API_URL = "https://ccd-data-store-api-finrem-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
      stageWithAgent('Generate Financial Remedy Consented Case config', product) {
        yarnBuilder.yarn("generate-excel-preview-consented")
      }
      stageWithAgent('Generate Financial Remedy Contested Case config', product) {
        yarnBuilder.yarn("generate-excel-preview-contested")
      }

      env.CCD_ADMIN_URL = "https://admin-web-finrem-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
      env.CCD_WEB_URL = "https://xui-finrem-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
      env.XUI_ORG_WEB_URL = "https://xui-mo-finrem-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
      env.CCD_CONSENTED_FILE_NAME = "ccd-config-preview-consented-${GIT_COMMIT}.xlsx"
      env.CCD_CONTESTED_FILE_NAME = "ccd-config-preview-contested-${GIT_COMMIT}.xlsx"
      steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'definitions/**/xlsx/*.xlsx'
      env.IMPORT_PREVIEW=true
    } else {

      withSubscription(env.ENV != 'prod' ? 'nonprod' : 'prod') {
        withTeamSecrets(pipelineConf, 'aat') {
          stageWithAgent('Generate Financial Remedy Consented Case config', product) {
            dir('definitions/consented/json/UserProfile') {
              sh 'echo ${USERPROFILE_CONSENTED_JUDGEDETAILS_1} > UserProfile-judgeDetails1-prod.json'
              sh 'echo ${USERPROFILE_CONSENTED_JUDGEDETAILS_2} > UserProfile-judgeDetails2-prod.json'
              sh 'echo ${USERPROFILE_CONSENTED_JUDGEDETAILS_3} > UserProfile-judgeDetails3-prod.json'
              sh 'echo ${USERPROFILE_CONSENTED_JUDGEDETAILS_4} > UserProfile-judgeDetails4-prod.json'
              sh 'echo ${USERPROFILE_CONSENTED_JUDGEDETAILS_5} > UserProfile-judgeDetails5-prod.json'
              sh 'echo ${USERPROFILE_CONSENTED_JUDGEDETAILS_6} > UserProfile-judgeDetails6-prod.json'
            }

            dir('definitions/consented/json/FixedLists') {
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_1} > FixedLists-judgeDetails1-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_2} > FixedLists-judgeDetails2-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_3} > FixedLists-judgeDetails3-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_4} > FixedLists-judgeDetails4-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_5} > FixedLists-judgeDetails5-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_6} > FixedLists-judgeDetails6-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_7} > FixedLists-judgeDetails7-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_8} > FixedLists-judgeDetails8-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_9} > FixedLists-judgeDetails9-prod.json'
            }

            yarnBuilder.yarn("generate-excel-${env.ENV}-consented")
          }

          stageWithAgent('Generate Financial Remedy Contested Case config', product) {
            dir('definitions/contested/json/FixedLists') {
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_1} > FixedLists-judgeDetails1-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_2} > FixedLists-judgeDetails2-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_3} > FixedLists-judgeDetails3-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_4} > FixedLists-judgeDetails4-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_5} > FixedLists-judgeDetails5-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_6} > FixedLists-judgeDetails6-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_7} > FixedLists-judgeDetails7-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_8} > FixedLists-judgeDetails8-prod.json'
              sh 'echo ${FIXEDLISTS_CONSENTED_JUDGEDETAILS_9} > FixedLists-judgeDetails9-prod.json'
            }
            yarnBuilder.yarn("generate-excel-${env.ENV}-contested")
            yarnBuilder.yarn("copy-${env.ENV}-xlxs-to-resources")
          }

          steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'definitions/**/xlsx/*.xlsx'
          env.CCD_ADMIN_URL = "https://ccd-admin-web.${env.ENV}.platform.hmcts.net"
          env.CCD_DATA_API_URL = "http://ccd-data-store-api-${env.ENV}.service.core-compute-aat.internal"
          env.CCD_WEB_URL = "https://manage-case.${env.ENV}.platform.hmcts.net"
          env.XUI_ORG_WEB_URL = "https://manage-org.${env.ENV}.platform.hmcts.net"
          env.CCD_CONSENTED_FILE_NAME = "ccd-config-${env.ENV}-consented-${GIT_COMMIT}.xlsx"
          env.CCD_CONTESTED_FILE_NAME = "ccd-config-${env.ENV}-contested-${GIT_COMMIT}.xlsx"
        }
      }
    }
  }

  onMaster() {
    env.ENV='aat'
  }

  onPR() {
    env.ENV='preview'
  }

  onIthc() {
    env.ENV='ithc'
  }

  onDemo() {
    env.ENV='demo'
  }

  onPerftest() {
    env.ENV='perftest'
  }

  before('smoketest:preview') {
    sh 'yarn playwright install'
  }

  before('smoketest:aat') {
    sh 'yarn playwright install'
  }

  before('functionalTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'definitions/**/xlsx/*.xlsx'
  }

  afterSuccess('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'test/functional/output/mochawesome.html'
  }

  afterSuccess('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'test/functional/output/mochawesome.html'
    slackSend(channel: '#finrem-dev', color: 'warning', message: "Master config has been uploaded to AAT. Build details here: <${env.RUN_DISPLAY_URL}|Build ${env.BUILD_DISPLAY_NAME}>.")
    env.ENV='prod'
  }
}

