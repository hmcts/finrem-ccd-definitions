#!groovy

properties([
        [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/finrem-ccd-definitions.git'],
        pipelineTriggers([cron('00 22 * * *')])
])

@Library("Infrastructure")

String product = "finrem"
String component = "ccd-definitions"

node {
    ws('workspace/finrem-ccd-definitions') {
        stage('Checkout') {
            deleteDir()
            checkout scm
        }
        stage('Env Setup') {
            withSubscription('nonprod') {
                def az = { cmd -> return sh(script: "env AZURE_CONFIG_DIR=/opt/jenkins/.azure-${env.SUBSCRIPTION_NAME} az ${cmd}", returnStdout: true).trim() }
                env.USERNAME_SOLICITOR =  az('keyvault secret show --vault-name finrem-aat --name username-solicitor --query value -o tsv').trim()
                env.PASSWORD_SOLICITOR =  az('keyvault secret show --vault-name finrem-aat --name password-solicitor --query value -o tsv').trim()
                env.USERNAME_CASEWORKER =  az('keyvault secret show --vault-name finrem-aat --name username-caseworker --query value -o tsv').trim()
                env.PASSWORD_CASEWORKER =  az('keyvault secret show --vault-name finrem-aat --name password-caseworker --query value -o tsv').trim()
                env.IDAM_CLIENT_SECRET =  az('keyvault secret show --vault-name finrem-aat --name idam-client-secret --query value -o tsv').trim()
                env.CCD_SUBMIT_S2S_SECRET =  az('keyvault secret show --vault-name finrem-aat --name ccd-submission-s2s-auth-secret --query value -o tsv').trim()
            }
        }
        stage('CCD E2E Journey Tests') {
            try {
                env.CCD_DATA_API_URL="http://ccd-data-store-api-aat.service.core-compute-aat.internal"
                env.CCD_WEB_URL="https://www-ccd.aat.platform.hmcts.net"
                env.NIGHTLY_TEST="true"
                sh 'yarn install'
                sh 'yarn test:nightly-functional'
            }
            catch (Exception err) {
                currentBuild.result = 'UNSTABLE'
                echo "RESULT: ${currentBuild.result}"
            } finally {
                archiveArtifacts 'test/functional/output/*'
            }

        }

        stage('After run') {
            echo "finished"
        }

    }
    deleteDir()
}
